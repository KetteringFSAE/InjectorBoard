   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SPIO.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	4
  23              		.section	.text.SPIO_Init,"ax",%progbits
  24              		.align	2
  25              		.global	SPIO_Init
  26              		.code	16
  27              		.thumb_func
  29              	SPIO_Init:
  30              	.LFB0:
  31              		.file 1 "../Generated_Code/SPIO.c"
   1:../Generated_Code/SPIO.c **** /* ###################################################################
   2:../Generated_Code/SPIO.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/SPIO.c **** **     Filename    : SPIO.c
   4:../Generated_Code/SPIO.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/SPIO.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/SPIO.c **** **     Component   : GPIO_LDD
   7:../Generated_Code/SPIO.c **** **     Version     : Component 01.128, Driver 01.08, CPU db: 3.00.000
   8:../Generated_Code/SPIO.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/SPIO.c **** **     Date/Time   : 2017-02-10, 23:16, # CodeGen: 21
  10:../Generated_Code/SPIO.c **** **     Abstract    :
  11:../Generated_Code/SPIO.c **** **         The HAL GPIO component will provide a low level API for unified
  12:../Generated_Code/SPIO.c **** **         access to general purpose digital input/output pins across
  13:../Generated_Code/SPIO.c **** **         various device designs.
  14:../Generated_Code/SPIO.c **** **
  15:../Generated_Code/SPIO.c **** **         RTOS drivers using HAL GPIO API will be simpler and more
  16:../Generated_Code/SPIO.c **** **         portable to various microprocessors.
  17:../Generated_Code/SPIO.c **** **     Settings    :
  18:../Generated_Code/SPIO.c **** **          Component name                                 : SPIO
  19:../Generated_Code/SPIO.c **** **          Port                                           : PTD
  20:../Generated_Code/SPIO.c **** **          Port width                                     : 32 bits
  21:../Generated_Code/SPIO.c **** **          Mask of allocated pins                         : 1
  22:../Generated_Code/SPIO.c **** **          Interrupt service/event                        : Disabled
  23:../Generated_Code/SPIO.c **** **          Bit fields                                     : 1
  24:../Generated_Code/SPIO.c **** **            Bit field                                    : 
  25:../Generated_Code/SPIO.c **** **              Field name                                 : CS
  26:../Generated_Code/SPIO.c **** **              Pins                                       : 1
  27:../Generated_Code/SPIO.c **** **                Pin                                      : 
  28:../Generated_Code/SPIO.c **** **                  Pin                                    : PTD0/SPI0_PCS0/TPM0_CH0
  29:../Generated_Code/SPIO.c **** **                  Pin signal                             : 
  30:../Generated_Code/SPIO.c **** **                  Initial pin direction                  : Output
  31:../Generated_Code/SPIO.c **** **                    Initial output state                 : 1
  32:../Generated_Code/SPIO.c **** **                  Initial pin event                      : Disabled
  33:../Generated_Code/SPIO.c **** **          Initialization                                 : 
  34:../Generated_Code/SPIO.c **** **            Auto initialization                          : no
  35:../Generated_Code/SPIO.c **** **            Event mask                                   : 
  36:../Generated_Code/SPIO.c **** **              OnPortEvent                                : Disabled
  37:../Generated_Code/SPIO.c **** **     Contents    :
  38:../Generated_Code/SPIO.c **** **         Init            - LDD_TDeviceData* SPIO_Init(LDD_TUserData *UserDataPtr);
  39:../Generated_Code/SPIO.c **** **         SetFieldValue   - void SPIO_SetFieldValue(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitF
  40:../Generated_Code/SPIO.c **** **         GetFieldValue   - SPIO_TFieldValue SPIO_GetFieldValue(LDD_TDeviceData *DeviceDataPtr,...
  41:../Generated_Code/SPIO.c **** **         ClearFieldBits  - void SPIO_ClearFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBit
  42:../Generated_Code/SPIO.c **** **         SetFieldBits    - void SPIO_SetFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitFi
  43:../Generated_Code/SPIO.c **** **         ToggleFieldBits - void SPIO_ToggleFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBi
  44:../Generated_Code/SPIO.c **** **
  45:../Generated_Code/SPIO.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  46:../Generated_Code/SPIO.c **** **     All Rights Reserved.
  47:../Generated_Code/SPIO.c **** **     
  48:../Generated_Code/SPIO.c **** **     Redistribution and use in source and binary forms, with or without modification,
  49:../Generated_Code/SPIO.c **** **     are permitted provided that the following conditions are met:
  50:../Generated_Code/SPIO.c **** **     
  51:../Generated_Code/SPIO.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  52:../Generated_Code/SPIO.c **** **       of conditions and the following disclaimer.
  53:../Generated_Code/SPIO.c **** **     
  54:../Generated_Code/SPIO.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  55:../Generated_Code/SPIO.c **** **       list of conditions and the following disclaimer in the documentation and/or
  56:../Generated_Code/SPIO.c **** **       other materials provided with the distribution.
  57:../Generated_Code/SPIO.c **** **     
  58:../Generated_Code/SPIO.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  59:../Generated_Code/SPIO.c **** **       contributors may be used to endorse or promote products derived from this
  60:../Generated_Code/SPIO.c **** **       software without specific prior written permission.
  61:../Generated_Code/SPIO.c **** **     
  62:../Generated_Code/SPIO.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  63:../Generated_Code/SPIO.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  64:../Generated_Code/SPIO.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  65:../Generated_Code/SPIO.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  66:../Generated_Code/SPIO.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  67:../Generated_Code/SPIO.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  68:../Generated_Code/SPIO.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  69:../Generated_Code/SPIO.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  70:../Generated_Code/SPIO.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  71:../Generated_Code/SPIO.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  72:../Generated_Code/SPIO.c **** **     
  73:../Generated_Code/SPIO.c **** **     http: www.freescale.com
  74:../Generated_Code/SPIO.c **** **     mail: support@freescale.com
  75:../Generated_Code/SPIO.c **** ** ###################################################################*/
  76:../Generated_Code/SPIO.c **** /*!
  77:../Generated_Code/SPIO.c **** ** @file SPIO.c
  78:../Generated_Code/SPIO.c **** ** @version 01.08
  79:../Generated_Code/SPIO.c **** ** @brief
  80:../Generated_Code/SPIO.c **** **         The HAL GPIO component will provide a low level API for unified
  81:../Generated_Code/SPIO.c **** **         access to general purpose digital input/output pins across
  82:../Generated_Code/SPIO.c **** **         various device designs.
  83:../Generated_Code/SPIO.c **** **
  84:../Generated_Code/SPIO.c **** **         RTOS drivers using HAL GPIO API will be simpler and more
  85:../Generated_Code/SPIO.c **** **         portable to various microprocessors.
  86:../Generated_Code/SPIO.c **** */         
  87:../Generated_Code/SPIO.c **** /*!
  88:../Generated_Code/SPIO.c **** **  @addtogroup SPIO_module SPIO module documentation
  89:../Generated_Code/SPIO.c **** **  @{
  90:../Generated_Code/SPIO.c **** */         
  91:../Generated_Code/SPIO.c **** 
  92:../Generated_Code/SPIO.c **** /* MODULE SPIO. */
  93:../Generated_Code/SPIO.c **** 
  94:../Generated_Code/SPIO.c **** #include "SPIO.h"
  95:../Generated_Code/SPIO.c **** /* {Default RTOS Adapter} No RTOS includes */
  96:../Generated_Code/SPIO.c **** #include "IO_Map.h"
  97:../Generated_Code/SPIO.c **** 
  98:../Generated_Code/SPIO.c **** #ifdef __cplusplus
  99:../Generated_Code/SPIO.c **** extern "C" {
 100:../Generated_Code/SPIO.c **** #endif 
 101:../Generated_Code/SPIO.c **** 
 102:../Generated_Code/SPIO.c **** typedef struct {
 103:../Generated_Code/SPIO.c ****   LDD_TUserData *UserData;             /* RTOS device data structure */
 104:../Generated_Code/SPIO.c **** } SPIO_TDeviceData, *SPIO_TDeviceDataPtr; /* Device data structure type */
 105:../Generated_Code/SPIO.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 106:../Generated_Code/SPIO.c **** static SPIO_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 107:../Generated_Code/SPIO.c **** /*
 108:../Generated_Code/SPIO.c **** ** ===================================================================
 109:../Generated_Code/SPIO.c **** **     Method      :  SPIO_Init (component GPIO_LDD)
 110:../Generated_Code/SPIO.c **** */
 111:../Generated_Code/SPIO.c **** /*!
 112:../Generated_Code/SPIO.c **** **     @brief
 113:../Generated_Code/SPIO.c **** **         This method initializes the associated peripheral(s) and the
 114:../Generated_Code/SPIO.c **** **         component internal variables. The method is called
 115:../Generated_Code/SPIO.c **** **         automatically as a part of the application initialization
 116:../Generated_Code/SPIO.c **** **         code.
 117:../Generated_Code/SPIO.c **** **     @param
 118:../Generated_Code/SPIO.c **** **         UserDataPtr     - Pointer to the RTOS device
 119:../Generated_Code/SPIO.c **** **                           structure. This pointer will be passed to
 120:../Generated_Code/SPIO.c **** **                           all events as parameter.
 121:../Generated_Code/SPIO.c **** **     @return
 122:../Generated_Code/SPIO.c **** **                         - Pointer to the dynamically allocated private
 123:../Generated_Code/SPIO.c **** **                           structure or NULL if there was an error.
 124:../Generated_Code/SPIO.c **** */
 125:../Generated_Code/SPIO.c **** /* ===================================================================*/
 126:../Generated_Code/SPIO.c **** LDD_TDeviceData* SPIO_Init(LDD_TUserData *UserDataPtr)
 127:../Generated_Code/SPIO.c **** {
  32              		.loc 1 127 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
 128:../Generated_Code/SPIO.c ****   /* Allocate LDD device structure */
 129:../Generated_Code/SPIO.c ****   SPIO_TDeviceData *DeviceDataPrv;
 130:../Generated_Code/SPIO.c **** 
 131:../Generated_Code/SPIO.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 132:../Generated_Code/SPIO.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  46              		.loc 1 132 0
  47 0008 104B     		ldr	r3, .L3
  48 000a FB60     		str	r3, [r7, #12]
 133:../Generated_Code/SPIO.c ****   /* Save RTOS Device structure */
 134:../Generated_Code/SPIO.c ****   DeviceDataPrv->UserData = UserDataPtr; /* Store the RTOS device structure */
  49              		.loc 1 134 0
  50 000c FB68     		ldr	r3, [r7, #12]
  51 000e 7A68     		ldr	r2, [r7, #4]
  52 0010 1A60     		str	r2, [r3]
 135:../Generated_Code/SPIO.c ****   /* GPIOD_PDOR: PDO|=1 */
 136:../Generated_Code/SPIO.c ****   GPIOD_PDOR |= GPIO_PDOR_PDO(0x01);
  53              		.loc 1 136 0
  54 0012 0F4B     		ldr	r3, .L3+4
  55 0014 0E4A     		ldr	r2, .L3+4
  56 0016 1268     		ldr	r2, [r2]
  57 0018 0121     		mov	r1, #1
  58 001a 0A43     		orr	r2, r1
  59 001c 1A60     		str	r2, [r3]
 137:../Generated_Code/SPIO.c ****   /* GPIOD_PDDR: PDD|=1 */
 138:../Generated_Code/SPIO.c ****   GPIOD_PDDR |= GPIO_PDDR_PDD(0x01);
  60              		.loc 1 138 0
  61 001e 0C4B     		ldr	r3, .L3+4
  62 0020 0B4A     		ldr	r2, .L3+4
  63 0022 5269     		ldr	r2, [r2, #20]
  64 0024 0121     		mov	r1, #1
  65 0026 0A43     		orr	r2, r1
  66 0028 5A61     		str	r2, [r3, #20]
 139:../Generated_Code/SPIO.c ****   /* Initialization of Port Control registers */
 140:../Generated_Code/SPIO.c ****   /* PORTD_PCR0: ISF=0,MUX=1 */
 141:../Generated_Code/SPIO.c ****   PORTD_PCR0 = (uint32_t)((PORTD_PCR0 & (uint32_t)~(uint32_t)(
  67              		.loc 1 141 0
  68 002a 0A4B     		ldr	r3, .L3+8
  69 002c 094A     		ldr	r2, .L3+8
  70 002e 1168     		ldr	r1, [r2]
  71 0030 094A     		ldr	r2, .L3+12
  72 0032 0A40     		and	r2, r1
  73 0034 8021     		mov	r1, #128
  74 0036 4900     		lsl	r1, r1, #1
  75 0038 0A43     		orr	r2, r1
  76 003a 1A60     		str	r2, [r3]
 142:../Generated_Code/SPIO.c ****                 PORT_PCR_ISF_MASK |
 143:../Generated_Code/SPIO.c ****                 PORT_PCR_MUX(0x06)
 144:../Generated_Code/SPIO.c ****                )) | (uint32_t)(
 145:../Generated_Code/SPIO.c ****                 PORT_PCR_MUX(0x01)
 146:../Generated_Code/SPIO.c ****                ));
 147:../Generated_Code/SPIO.c ****   /* Registration of the device structure */
 148:../Generated_Code/SPIO.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_SPIO_ID,DeviceDataPrv);
  77              		.loc 1 148 0
  78 003c 074B     		ldr	r3, .L3+16
  79 003e FA68     		ldr	r2, [r7, #12]
  80 0040 9A60     		str	r2, [r3, #8]
 149:../Generated_Code/SPIO.c ****   return ((LDD_TDeviceData *)DeviceDataPrv);
  81              		.loc 1 149 0
  82 0042 FB68     		ldr	r3, [r7, #12]
 150:../Generated_Code/SPIO.c **** }
  83              		.loc 1 150 0
  84 0044 181C     		mov	r0, r3
  85 0046 BD46     		mov	sp, r7
  86 0048 04B0     		add	sp, sp, #16
  87              		@ sp needed for prologue
  88 004a 80BD     		pop	{r7, pc}
  89              	.L4:
  90              		.align	2
  91              	.L3:
  92 004c 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
  93 0050 C0F00F40 		.word	1074786496
  94 0054 00C00440 		.word	1074053120
  95 0058 FFF8FFFE 		.word	-16779009
  96 005c 00000000 		.word	PE_LDD_DeviceDataList
  97              		.cfi_endproc
  98              	.LFE0:
 100              		.section	.text.SPIO_SetFieldValue,"ax",%progbits
 101              		.align	2
 102              		.global	SPIO_SetFieldValue
 103              		.code	16
 104              		.thumb_func
 106              	SPIO_SetFieldValue:
 107              	.LFB1:
 151:../Generated_Code/SPIO.c **** 
 152:../Generated_Code/SPIO.c **** /*
 153:../Generated_Code/SPIO.c **** ** ===================================================================
 154:../Generated_Code/SPIO.c **** **     Method      :  SPIO_SetFieldValue (component GPIO_LDD)
 155:../Generated_Code/SPIO.c **** */
 156:../Generated_Code/SPIO.c **** /*!
 157:../Generated_Code/SPIO.c **** **     @brief
 158:../Generated_Code/SPIO.c **** **         This method sets the output data value of the specified bit
 159:../Generated_Code/SPIO.c **** **         field.
 160:../Generated_Code/SPIO.c **** **     @param
 161:../Generated_Code/SPIO.c **** **         DeviceDataPtr   - Device data structure
 162:../Generated_Code/SPIO.c **** **                           pointer returned by [Init] method.
 163:../Generated_Code/SPIO.c **** **     @param
 164:../Generated_Code/SPIO.c **** **         Field           - Bit field to write. Bit fields are
 165:../Generated_Code/SPIO.c **** **                           defined during design time and for each bit
 166:../Generated_Code/SPIO.c **** **                           field there is a generated constant.
 167:../Generated_Code/SPIO.c **** **     @param
 168:../Generated_Code/SPIO.c **** **         Value           - Aligned data value to writting to the
 169:../Generated_Code/SPIO.c **** **                           specified bit field. The bit 0 corresponds
 170:../Generated_Code/SPIO.c **** **                           with the pin which has index 0 within the
 171:../Generated_Code/SPIO.c **** **                           given bit field, the bit 1 corresponds with
 172:../Generated_Code/SPIO.c **** **                           the pin which has index 1 within the given
 173:../Generated_Code/SPIO.c **** **                           bit field, etc.
 174:../Generated_Code/SPIO.c **** */
 175:../Generated_Code/SPIO.c **** /* ===================================================================*/
 176:../Generated_Code/SPIO.c **** void SPIO_SetFieldValue(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, SPIO_TFieldValue 
 177:../Generated_Code/SPIO.c **** {
 108              		.loc 1 177 0
 109              		.cfi_startproc
 110 0000 80B5     		push	{r7, lr}
 111              	.LCFI3:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 0002 84B0     		sub	sp, sp, #16
 116              	.LCFI4:
 117              		.cfi_def_cfa_offset 24
 118 0004 00AF     		add	r7, sp, #0
 119              	.LCFI5:
 120              		.cfi_def_cfa_register 7
 121 0006 F860     		str	r0, [r7, #12]
 122 0008 B960     		str	r1, [r7, #8]
 123 000a 7A60     		str	r2, [r7, #4]
 178:../Generated_Code/SPIO.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 179:../Generated_Code/SPIO.c ****   switch (Field) {                     /* no break */
 124              		.loc 1 179 0
 125 000c BB68     		ldr	r3, [r7, #8]
 126 000e 002B     		cmp	r3, #0
 127 0010 0CD1     		bne	.L9
 128              	.L7:
 180:../Generated_Code/SPIO.c ****     case CS: {                         /* bit field #0 */
 181:../Generated_Code/SPIO.c ****       GPIO_PDD_SetPortDataOutput(SPIO_MODULE_BASE_ADDRESS,
 129              		.loc 1 181 0
 130 0012 084B     		ldr	r3, .L10
 131 0014 074A     		ldr	r2, .L10
 132 0016 1268     		ldr	r2, [r2]
 133 0018 0121     		mov	r1, #1
 134 001a 101C     		mov	r0, r2
 135 001c 8843     		bic	r0, r1
 136 001e 011C     		mov	r1, r0
 137 0020 7868     		ldr	r0, [r7, #4]
 138 0022 0122     		mov	r2, #1
 139 0024 0240     		and	r2, r0
 140 0026 0A43     		orr	r2, r1
 141 0028 1A60     		str	r2, [r3]
 182:../Generated_Code/SPIO.c ****         (
 183:../Generated_Code/SPIO.c ****           GPIO_PDD_GetPortDataOutput(SPIO_MODULE_BASE_ADDRESS)
 184:../Generated_Code/SPIO.c ****           & ((SPIO_TPortValue)(~((SPIO_TPortValue)SPIO_CS_MASK)))
 185:../Generated_Code/SPIO.c ****         )
 186:../Generated_Code/SPIO.c ****         | (
 187:../Generated_Code/SPIO.c ****           Value
 188:../Generated_Code/SPIO.c ****           & ((SPIO_TPortValue)SPIO_CS_MASK)
 189:../Generated_Code/SPIO.c ****         )
 190:../Generated_Code/SPIO.c ****       );
 191:../Generated_Code/SPIO.c ****       break;
 142              		.loc 1 191 0
 143 002a 00E0     		b	.L5
 144              	.L9:
 192:../Generated_Code/SPIO.c ****     }
 193:../Generated_Code/SPIO.c ****     default:
 194:../Generated_Code/SPIO.c ****       break;                           /* Invalid Field is not treated, result is undefined */
 145              		.loc 1 194 0
 146 002c C046     		mov	r8, r8
 147              	.L5:
 195:../Generated_Code/SPIO.c ****   } /* switch (Field) */
 196:../Generated_Code/SPIO.c **** }
 148              		.loc 1 196 0
 149 002e BD46     		mov	sp, r7
 150 0030 04B0     		add	sp, sp, #16
 151              		@ sp needed for prologue
 152 0032 80BD     		pop	{r7, pc}
 153              	.L11:
 154              		.align	2
 155              	.L10:
 156 0034 C0F00FF8 		.word	-133173056
 157              		.cfi_endproc
 158              	.LFE1:
 160              		.section	.text.SPIO_GetFieldValue,"ax",%progbits
 161              		.align	2
 162              		.global	SPIO_GetFieldValue
 163              		.code	16
 164              		.thumb_func
 166              	SPIO_GetFieldValue:
 167              	.LFB2:
 197:../Generated_Code/SPIO.c **** 
 198:../Generated_Code/SPIO.c **** /*
 199:../Generated_Code/SPIO.c **** ** ===================================================================
 200:../Generated_Code/SPIO.c **** **     Method      :  SPIO_GetFieldValue (component GPIO_LDD)
 201:../Generated_Code/SPIO.c **** */
 202:../Generated_Code/SPIO.c **** /*!
 203:../Generated_Code/SPIO.c **** **     @brief
 204:../Generated_Code/SPIO.c **** **         This method returns the current input data of the specified
 205:../Generated_Code/SPIO.c **** **         field.
 206:../Generated_Code/SPIO.c **** **     @param
 207:../Generated_Code/SPIO.c **** **         DeviceDataPtr   - Device data structure
 208:../Generated_Code/SPIO.c **** **                           pointer returned by [Init] method.
 209:../Generated_Code/SPIO.c **** **     @param
 210:../Generated_Code/SPIO.c **** **         Field           - Bit field to reading. Bit fields are
 211:../Generated_Code/SPIO.c **** **                           defined during design time and for each bit
 212:../Generated_Code/SPIO.c **** **                           field there is a generated constant.
 213:../Generated_Code/SPIO.c **** **     @return
 214:../Generated_Code/SPIO.c **** **                         - Aligned current port input value masked for
 215:../Generated_Code/SPIO.c **** **                           allocated pins of the field. The bit 0
 216:../Generated_Code/SPIO.c **** **                           corresponds with the pin which has index 0
 217:../Generated_Code/SPIO.c **** **                           within the given bit field, the bit 1
 218:../Generated_Code/SPIO.c **** **                           corresponds with the pin which has index 1
 219:../Generated_Code/SPIO.c **** **                           within the given bit field, etc.
 220:../Generated_Code/SPIO.c **** */
 221:../Generated_Code/SPIO.c **** /* ===================================================================*/
 222:../Generated_Code/SPIO.c **** SPIO_TFieldValue SPIO_GetFieldValue(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field)
 223:../Generated_Code/SPIO.c **** {
 168              		.loc 1 223 0
 169              		.cfi_startproc
 170 0000 80B5     		push	{r7, lr}
 171              	.LCFI6:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 82B0     		sub	sp, sp, #8
 176              	.LCFI7:
 177              		.cfi_def_cfa_offset 16
 178 0004 00AF     		add	r7, sp, #0
 179              	.LCFI8:
 180              		.cfi_def_cfa_register 7
 181 0006 7860     		str	r0, [r7, #4]
 182 0008 3960     		str	r1, [r7]
 224:../Generated_Code/SPIO.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 225:../Generated_Code/SPIO.c ****   switch (Field) {                     /* no break */
 183              		.loc 1 225 0
 184 000a 3B68     		ldr	r3, [r7]
 185 000c 002B     		cmp	r3, #0
 186 000e 04D1     		bne	.L16
 187              	.L14:
 226:../Generated_Code/SPIO.c ****     case CS: {                         /* bit field #0 */
 227:../Generated_Code/SPIO.c ****       return
 228:../Generated_Code/SPIO.c ****         (SPIO_TFieldValue)(
 229:../Generated_Code/SPIO.c ****           GPIO_PDD_GetPortDataInput(SPIO_MODULE_BASE_ADDRESS)
 188              		.loc 1 229 0
 189 0010 054B     		ldr	r3, .L17
 190 0012 1A69     		ldr	r2, [r3, #16]
 227:../Generated_Code/SPIO.c ****       return
 191              		.loc 1 227 0
 192 0014 0123     		mov	r3, #1
 193 0016 1340     		and	r3, r2
 194 0018 01E0     		b	.L15
 195              	.L16:
 230:../Generated_Code/SPIO.c ****           & (SPIO_TPortValue)SPIO_CS_MASK
 231:../Generated_Code/SPIO.c ****         );
 232:../Generated_Code/SPIO.c ****     }
 233:../Generated_Code/SPIO.c ****     default:
 234:../Generated_Code/SPIO.c ****       break;                           /* Invalid BitField is not treated, result is undefined */
 196              		.loc 1 234 0
 197 001a C046     		mov	r8, r8
 235:../Generated_Code/SPIO.c ****   } /* switch (Field) */
 236:../Generated_Code/SPIO.c ****   return (SPIO_TFieldValue)0U;
 198              		.loc 1 236 0
 199 001c 0023     		mov	r3, #0
 200              	.L15:
 237:../Generated_Code/SPIO.c **** }
 201              		.loc 1 237 0
 202 001e 181C     		mov	r0, r3
 203 0020 BD46     		mov	sp, r7
 204 0022 02B0     		add	sp, sp, #8
 205              		@ sp needed for prologue
 206 0024 80BD     		pop	{r7, pc}
 207              	.L18:
 208 0026 C046     		.align	2
 209              	.L17:
 210 0028 C0F00FF8 		.word	-133173056
 211              		.cfi_endproc
 212              	.LFE2:
 214              		.section	.text.SPIO_ClearFieldBits,"ax",%progbits
 215              		.align	2
 216              		.global	SPIO_ClearFieldBits
 217              		.code	16
 218              		.thumb_func
 220              	SPIO_ClearFieldBits:
 221              	.LFB3:
 238:../Generated_Code/SPIO.c **** 
 239:../Generated_Code/SPIO.c **** /*
 240:../Generated_Code/SPIO.c **** ** ===================================================================
 241:../Generated_Code/SPIO.c **** **     Method      :  SPIO_ClearFieldBits (component GPIO_LDD)
 242:../Generated_Code/SPIO.c **** */
 243:../Generated_Code/SPIO.c **** /*!
 244:../Generated_Code/SPIO.c **** **     @brief
 245:../Generated_Code/SPIO.c **** **         This method drives the specified bits of the specified bit
 246:../Generated_Code/SPIO.c **** **         field to the inactive level.
 247:../Generated_Code/SPIO.c **** **     @param
 248:../Generated_Code/SPIO.c **** **         DeviceDataPtr   - Device data structure
 249:../Generated_Code/SPIO.c **** **                           pointer returned by [Init] method.
 250:../Generated_Code/SPIO.c **** **     @param
 251:../Generated_Code/SPIO.c **** **         Field           - Bit field to write. Bit fields are
 252:../Generated_Code/SPIO.c **** **                           defined during design time and for each bit
 253:../Generated_Code/SPIO.c **** **                           field there is a generated constant.
 254:../Generated_Code/SPIO.c **** **     @param
 255:../Generated_Code/SPIO.c **** **         Mask            - Aligned mask of bits to setting the
 256:../Generated_Code/SPIO.c **** **                           inactive level. Each field pin has
 257:../Generated_Code/SPIO.c **** **                           corresponding bit in the mask. Bit value 0
 258:../Generated_Code/SPIO.c **** **                           means not selected bit, bit value 1 means
 259:../Generated_Code/SPIO.c **** **                           selected bit. The bit 0 corresponds with
 260:../Generated_Code/SPIO.c **** **                           the pin which has index 0 within the given
 261:../Generated_Code/SPIO.c **** **                           bit field, the bit 1 corresponds with the
 262:../Generated_Code/SPIO.c **** **                           pin which has index 1 within the given bit
 263:../Generated_Code/SPIO.c **** **                           field, etc.
 264:../Generated_Code/SPIO.c **** */
 265:../Generated_Code/SPIO.c **** /* ===================================================================*/
 266:../Generated_Code/SPIO.c **** void SPIO_ClearFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, SPIO_TFieldValue
 267:../Generated_Code/SPIO.c **** {
 222              		.loc 1 267 0
 223              		.cfi_startproc
 224 0000 80B5     		push	{r7, lr}
 225              	.LCFI9:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 84B0     		sub	sp, sp, #16
 230              	.LCFI10:
 231              		.cfi_def_cfa_offset 24
 232 0004 00AF     		add	r7, sp, #0
 233              	.LCFI11:
 234              		.cfi_def_cfa_register 7
 235 0006 F860     		str	r0, [r7, #12]
 236 0008 B960     		str	r1, [r7, #8]
 237 000a 7A60     		str	r2, [r7, #4]
 268:../Generated_Code/SPIO.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 269:../Generated_Code/SPIO.c ****   switch (Field) {                     /* no break */
 238              		.loc 1 269 0
 239 000c BB68     		ldr	r3, [r7, #8]
 240 000e 002B     		cmp	r3, #0
 241 0010 05D1     		bne	.L23
 242              	.L21:
 270:../Generated_Code/SPIO.c ****     case CS: {                         /* bit field #0 */
 271:../Generated_Code/SPIO.c ****       GPIO_PDD_ClearPortDataOutputMask(SPIO_MODULE_BASE_ADDRESS,
 243              		.loc 1 271 0
 244 0012 054B     		ldr	r3, .L24
 245 0014 7968     		ldr	r1, [r7, #4]
 246 0016 0122     		mov	r2, #1
 247 0018 0A40     		and	r2, r1
 248 001a 9A60     		str	r2, [r3, #8]
 272:../Generated_Code/SPIO.c ****         ((SPIO_TPortValue)SPIO_CS_MASK)
 273:../Generated_Code/SPIO.c ****         & Mask
 274:../Generated_Code/SPIO.c ****       );
 275:../Generated_Code/SPIO.c ****       break;
 249              		.loc 1 275 0
 250 001c 00E0     		b	.L19
 251              	.L23:
 276:../Generated_Code/SPIO.c ****     }
 277:../Generated_Code/SPIO.c ****     default:
 278:../Generated_Code/SPIO.c ****       break;                           /* Invalid Field is not treated, result is undefined */
 252              		.loc 1 278 0
 253 001e C046     		mov	r8, r8
 254              	.L19:
 279:../Generated_Code/SPIO.c ****   } /* switch (Field) */
 280:../Generated_Code/SPIO.c **** }
 255              		.loc 1 280 0
 256 0020 BD46     		mov	sp, r7
 257 0022 04B0     		add	sp, sp, #16
 258              		@ sp needed for prologue
 259 0024 80BD     		pop	{r7, pc}
 260              	.L25:
 261 0026 C046     		.align	2
 262              	.L24:
 263 0028 C0F00FF8 		.word	-133173056
 264              		.cfi_endproc
 265              	.LFE3:
 267              		.section	.text.SPIO_SetFieldBits,"ax",%progbits
 268              		.align	2
 269              		.global	SPIO_SetFieldBits
 270              		.code	16
 271              		.thumb_func
 273              	SPIO_SetFieldBits:
 274              	.LFB4:
 281:../Generated_Code/SPIO.c **** 
 282:../Generated_Code/SPIO.c **** /*
 283:../Generated_Code/SPIO.c **** ** ===================================================================
 284:../Generated_Code/SPIO.c **** **     Method      :  SPIO_SetFieldBits (component GPIO_LDD)
 285:../Generated_Code/SPIO.c **** */
 286:../Generated_Code/SPIO.c **** /*!
 287:../Generated_Code/SPIO.c **** **     @brief
 288:../Generated_Code/SPIO.c **** **         This method drives the specified bits of the specified bit
 289:../Generated_Code/SPIO.c **** **         field to the active level.
 290:../Generated_Code/SPIO.c **** **     @param
 291:../Generated_Code/SPIO.c **** **         DeviceDataPtr   - Device data structure
 292:../Generated_Code/SPIO.c **** **                           pointer returned by [Init] method.
 293:../Generated_Code/SPIO.c **** **     @param
 294:../Generated_Code/SPIO.c **** **         Field           - Bit field to write. Bit fields are
 295:../Generated_Code/SPIO.c **** **                           defined during design time and for each bit
 296:../Generated_Code/SPIO.c **** **                           field there is a generated constant.
 297:../Generated_Code/SPIO.c **** **     @param
 298:../Generated_Code/SPIO.c **** **         Mask            - Aligned mask of bits to setting the
 299:../Generated_Code/SPIO.c **** **                           active level. Each field pin has
 300:../Generated_Code/SPIO.c **** **                           corresponding bit in the mask. Bit value 0
 301:../Generated_Code/SPIO.c **** **                           means not selected bit, bit value 1 means
 302:../Generated_Code/SPIO.c **** **                           selected bit. The bit 0 corresponds with
 303:../Generated_Code/SPIO.c **** **                           the pin which has index 0 within the given
 304:../Generated_Code/SPIO.c **** **                           bit field, the bit 1 corresponds with the
 305:../Generated_Code/SPIO.c **** **                           pin which has index 1 within the given bit
 306:../Generated_Code/SPIO.c **** **                           field, etc.
 307:../Generated_Code/SPIO.c **** */
 308:../Generated_Code/SPIO.c **** /* ===================================================================*/
 309:../Generated_Code/SPIO.c **** void SPIO_SetFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, SPIO_TFieldValue M
 310:../Generated_Code/SPIO.c **** {
 275              		.loc 1 310 0
 276              		.cfi_startproc
 277 0000 80B5     		push	{r7, lr}
 278              	.LCFI12:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
 282 0002 84B0     		sub	sp, sp, #16
 283              	.LCFI13:
 284              		.cfi_def_cfa_offset 24
 285 0004 00AF     		add	r7, sp, #0
 286              	.LCFI14:
 287              		.cfi_def_cfa_register 7
 288 0006 F860     		str	r0, [r7, #12]
 289 0008 B960     		str	r1, [r7, #8]
 290 000a 7A60     		str	r2, [r7, #4]
 311:../Generated_Code/SPIO.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 312:../Generated_Code/SPIO.c ****   switch (Field) {                     /* no break */
 291              		.loc 1 312 0
 292 000c BB68     		ldr	r3, [r7, #8]
 293 000e 002B     		cmp	r3, #0
 294 0010 05D1     		bne	.L30
 295              	.L28:
 313:../Generated_Code/SPIO.c ****     case CS: {                         /* bit field #0 */
 314:../Generated_Code/SPIO.c ****       GPIO_PDD_SetPortDataOutputMask(SPIO_MODULE_BASE_ADDRESS,
 296              		.loc 1 314 0
 297 0012 054B     		ldr	r3, .L31
 298 0014 7968     		ldr	r1, [r7, #4]
 299 0016 0122     		mov	r2, #1
 300 0018 0A40     		and	r2, r1
 301 001a 5A60     		str	r2, [r3, #4]
 315:../Generated_Code/SPIO.c ****         ((SPIO_TPortValue)SPIO_CS_MASK)
 316:../Generated_Code/SPIO.c ****         & Mask
 317:../Generated_Code/SPIO.c ****       );
 318:../Generated_Code/SPIO.c ****       break;
 302              		.loc 1 318 0
 303 001c 00E0     		b	.L26
 304              	.L30:
 319:../Generated_Code/SPIO.c ****     }
 320:../Generated_Code/SPIO.c ****     default:
 321:../Generated_Code/SPIO.c ****       break;                           /* Invalid Field is not treated, result is undefined */
 305              		.loc 1 321 0
 306 001e C046     		mov	r8, r8
 307              	.L26:
 322:../Generated_Code/SPIO.c ****   } /* switch (Field) */
 323:../Generated_Code/SPIO.c **** }
 308              		.loc 1 323 0
 309 0020 BD46     		mov	sp, r7
 310 0022 04B0     		add	sp, sp, #16
 311              		@ sp needed for prologue
 312 0024 80BD     		pop	{r7, pc}
 313              	.L32:
 314 0026 C046     		.align	2
 315              	.L31:
 316 0028 C0F00FF8 		.word	-133173056
 317              		.cfi_endproc
 318              	.LFE4:
 320              		.section	.text.SPIO_ToggleFieldBits,"ax",%progbits
 321              		.align	2
 322              		.global	SPIO_ToggleFieldBits
 323              		.code	16
 324              		.thumb_func
 326              	SPIO_ToggleFieldBits:
 327              	.LFB5:
 324:../Generated_Code/SPIO.c **** 
 325:../Generated_Code/SPIO.c **** /*
 326:../Generated_Code/SPIO.c **** ** ===================================================================
 327:../Generated_Code/SPIO.c **** **     Method      :  SPIO_ToggleFieldBits (component GPIO_LDD)
 328:../Generated_Code/SPIO.c **** */
 329:../Generated_Code/SPIO.c **** /*!
 330:../Generated_Code/SPIO.c **** **     @brief
 331:../Generated_Code/SPIO.c **** **         This method inverts the specified bits of the specified bit
 332:../Generated_Code/SPIO.c **** **         field to other level.
 333:../Generated_Code/SPIO.c **** **     @param
 334:../Generated_Code/SPIO.c **** **         DeviceDataPtr   - Device data structure
 335:../Generated_Code/SPIO.c **** **                           pointer returned by [Init] method.
 336:../Generated_Code/SPIO.c **** **     @param
 337:../Generated_Code/SPIO.c **** **         Field           - Bit field to write. Bit fields are
 338:../Generated_Code/SPIO.c **** **                           defined during design time and for each bit
 339:../Generated_Code/SPIO.c **** **                           field there is a generated constant.
 340:../Generated_Code/SPIO.c **** **     @param
 341:../Generated_Code/SPIO.c **** **         Mask            - Aligned mask of bits to inverting the
 342:../Generated_Code/SPIO.c **** **                           current level. Each field pin has
 343:../Generated_Code/SPIO.c **** **                           corresponding bit in the mask. Bit value 0
 344:../Generated_Code/SPIO.c **** **                           means not selected bit, bit value 1 means
 345:../Generated_Code/SPIO.c **** **                           selected bit. The bit 0 corresponds with
 346:../Generated_Code/SPIO.c **** **                           the pin which has index 0 within the given
 347:../Generated_Code/SPIO.c **** **                           bit field, the bit 1 corresponds with the
 348:../Generated_Code/SPIO.c **** **                           pin which has index 1 within the given bit
 349:../Generated_Code/SPIO.c **** **                           field, etc.
 350:../Generated_Code/SPIO.c **** */
 351:../Generated_Code/SPIO.c **** /* ===================================================================*/
 352:../Generated_Code/SPIO.c **** void SPIO_ToggleFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, SPIO_TFieldValu
 353:../Generated_Code/SPIO.c **** {
 328              		.loc 1 353 0
 329              		.cfi_startproc
 330 0000 80B5     		push	{r7, lr}
 331              	.LCFI15:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 84B0     		sub	sp, sp, #16
 336              	.LCFI16:
 337              		.cfi_def_cfa_offset 24
 338 0004 00AF     		add	r7, sp, #0
 339              	.LCFI17:
 340              		.cfi_def_cfa_register 7
 341 0006 F860     		str	r0, [r7, #12]
 342 0008 B960     		str	r1, [r7, #8]
 343 000a 7A60     		str	r2, [r7, #4]
 354:../Generated_Code/SPIO.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 355:../Generated_Code/SPIO.c ****   switch (Field) {                     /* no break */
 344              		.loc 1 355 0
 345 000c BB68     		ldr	r3, [r7, #8]
 346 000e 002B     		cmp	r3, #0
 347 0010 05D1     		bne	.L37
 348              	.L35:
 356:../Generated_Code/SPIO.c ****     case CS: {                         /* bit field #0 */
 357:../Generated_Code/SPIO.c ****       GPIO_PDD_TogglePortDataOutputMask(SPIO_MODULE_BASE_ADDRESS,
 349              		.loc 1 357 0
 350 0012 054B     		ldr	r3, .L38
 351 0014 7968     		ldr	r1, [r7, #4]
 352 0016 0122     		mov	r2, #1
 353 0018 0A40     		and	r2, r1
 354 001a DA60     		str	r2, [r3, #12]
 358:../Generated_Code/SPIO.c ****         ((SPIO_TPortValue)SPIO_CS_MASK)
 359:../Generated_Code/SPIO.c ****         & Mask
 360:../Generated_Code/SPIO.c ****       );
 361:../Generated_Code/SPIO.c ****       break;
 355              		.loc 1 361 0
 356 001c 00E0     		b	.L33
 357              	.L37:
 362:../Generated_Code/SPIO.c ****     }
 363:../Generated_Code/SPIO.c ****     default:
 364:../Generated_Code/SPIO.c ****       break;                           /* Invalid Field is not treated, result is undefined */
 358              		.loc 1 364 0
 359 001e C046     		mov	r8, r8
 360              	.L33:
 365:../Generated_Code/SPIO.c ****   } /* switch (Field) */
 366:../Generated_Code/SPIO.c **** }
 361              		.loc 1 366 0
 362 0020 BD46     		mov	sp, r7
 363 0022 04B0     		add	sp, sp, #16
 364              		@ sp needed for prologue
 365 0024 80BD     		pop	{r7, pc}
 366              	.L39:
 367 0026 C046     		.align	2
 368              	.L38:
 369 0028 C0F00FF8 		.word	-133173056
 370              		.cfi_endproc
 371              	.LFE5:
 373              		.text
 374              	.Letext0:
 375              		.file 2 "C:/Freescale/CW MCU v10.7/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 376              		.file 3 "../Generated_Code/PE_Types.h"
 377              		.file 4 "C:/Freescale/CW MCU v10.7/MCU/ProcessorExpert/lib/Kinetis/iofiles/MKL25Z4.h"
 378              		.file 5 "../Generated_Code/SPIO.h"
DEFINED SYMBOLS
                            *ABS*:00000000 SPIO.c
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:24     .text.SPIO_Init:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:29     .text.SPIO_Init:00000000 SPIO_Init
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:92     .text.SPIO_Init:0000004c $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:101    .text.SPIO_SetFieldValue:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:106    .text.SPIO_SetFieldValue:00000000 SPIO_SetFieldValue
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:156    .text.SPIO_SetFieldValue:00000034 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:161    .text.SPIO_GetFieldValue:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:166    .text.SPIO_GetFieldValue:00000000 SPIO_GetFieldValue
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:210    .text.SPIO_GetFieldValue:00000028 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:215    .text.SPIO_ClearFieldBits:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:220    .text.SPIO_ClearFieldBits:00000000 SPIO_ClearFieldBits
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:263    .text.SPIO_ClearFieldBits:00000028 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:268    .text.SPIO_SetFieldBits:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:273    .text.SPIO_SetFieldBits:00000000 SPIO_SetFieldBits
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:316    .text.SPIO_SetFieldBits:00000028 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:321    .text.SPIO_ToggleFieldBits:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:326    .text.SPIO_ToggleFieldBits:00000000 SPIO_ToggleFieldBits
C:\Users\SAE_LP1\AppData\Local\Temp\ccIm2oS8.s:369    .text.SPIO_ToggleFieldBits:00000028 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.aba60cd3b17efbc2d56a1d9fc6f583a6
                           .group:00000000 wm4.ewl_c_version.h.9.0bcb57d6a3f89baae1f9b121de2772f5
                           .group:00000000 wm4.os_enum.h.9.03d7426d632bb1a35ec1708754c41daf
                           .group:00000000 wm4.ansi_prefix.ARM.h.13.2dd306b0ccbe86124098bfe3a0b58d88
                           .group:00000000 wm4.ansi_parms.h.64.05090287ebda70c0d79c02b050dca090
                           .group:00000000 wm4.limits_api.h.9.bc6daa20b3abae2bba6c512044e73b43
                           .group:00000000 wm4.ewl_lib_ext1.h.14.f9b057cc049671136093886db2a3473f
                           .group:00000000 wm4.cstdint.137.268b37259d2d366c21376cbd280e10d7
                           .group:00000000 wm4.PE_Types.h.69.b612cd1969642d8997d4dbe4ebf41ee5
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.61.443ca05468cb0c6bf080e06394e39146
                           .group:00000000 wm4.MKL25Z4.h.61.adbdc31ae5ef570825ab0667cccdf447
                           .group:00000000 wm4.PDD_Types.h.5.e0b4125fe5201c5e1f688b067f4f0d54
                           .group:00000000 wm4.GPIO_PDD.h.122.b35a34a6eaffa5c552aafe5692260473
                           .group:00000000 wm4.PORT_PDD.h.9.e24435d4c3cbcc67beceb9e359966485
                           .group:00000000 wm4.Cpu.h.64.f81ea9fa0d5dd4235933d360f41084fe
                           .group:00000000 wm4.SPIO.h.115.4aa61cdf57e3ce02c8471e878bd2249b

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
