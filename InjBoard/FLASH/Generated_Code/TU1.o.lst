   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.ChannelDevice,"a",%progbits
  18              		.align	2
  21              	ChannelDevice:
  22 0000 02       		.byte	2
  23 0001 000000   		.section	.rodata.ChannelMode,"a",%progbits
  24              		.align	2
  27              	ChannelMode:
  28 0000 00       		.space	1
  29 0001 000000   		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  30              		.align	2
  33              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  34 0000 00000000 		.space	8
  34      00000000 
  35              		.section	.text.TU1_Init,"ax",%progbits
  36              		.align	2
  37              		.global	TU1_Init
  38              		.code	16
  39              		.thumb_func
  41              	TU1_Init:
  42              	.LFB0:
  43              		.file 1 "../Generated_Code/TU1.c"
   1:../Generated_Code/TU1.c **** /* ###################################################################
   2:../Generated_Code/TU1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/TU1.c **** **     Filename    : TU1.c
   4:../Generated_Code/TU1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU1.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU1.c **** **     Version     : Component 01.164, Driver 01.11, CPU db: 3.00.000
   8:../Generated_Code/TU1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU1.c **** **     Date/Time   : 2017-02-22, 20:38, # CodeGen: 25
  10:../Generated_Code/TU1.c **** **     Abstract    :
  11:../Generated_Code/TU1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU1.c **** **     Settings    :
  14:../Generated_Code/TU1.c **** **          Component name                                 : TU1
  15:../Generated_Code/TU1.c **** **          Module name                                    : TPM0
  16:../Generated_Code/TU1.c **** **          Counter                                        : TPM0_CNT
  17:../Generated_Code/TU1.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU1.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU1.c **** **          Value type                                     : uint16_t
  20:../Generated_Code/TU1.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU1.c **** **            Counter frequency                            : Auto select
  22:../Generated_Code/TU1.c **** **          Counter restart                                : On-match
  23:../Generated_Code/TU1.c **** **            Period device                                : TPM0_MOD
  24:../Generated_Code/TU1.c **** **            Period                                       : 1 µs
  25:../Generated_Code/TU1.c **** **            Interrupt                                    : Disabled
  26:../Generated_Code/TU1.c **** **          Channel list                                   : 1
  27:../Generated_Code/TU1.c **** **            Channel 0                                    : 
  28:../Generated_Code/TU1.c **** **              Mode                                       : Compare
  29:../Generated_Code/TU1.c **** **                Compare                                  : TPM0_C2V
  30:../Generated_Code/TU1.c **** **                Offset                                   : 0.5 µs
  31:../Generated_Code/TU1.c **** **                Output on compare                        : Set
  32:../Generated_Code/TU1.c **** **                  Output on overrun                      : Clear
  33:../Generated_Code/TU1.c **** **                  Initial state                          : Low
  34:../Generated_Code/TU1.c **** **                  Output pin                             : PTC3/LLWU_P7/UART1_RX/TPM0_CH2/CLKOUTa
  35:../Generated_Code/TU1.c **** **                  Output pin signal                      : 
  36:../Generated_Code/TU1.c **** **                Interrupt                                : Disabled
  37:../Generated_Code/TU1.c **** **          Initialization                                 : 
  38:../Generated_Code/TU1.c **** **            Enabled in init. code                        : yes
  39:../Generated_Code/TU1.c **** **            Auto initialization                          : no
  40:../Generated_Code/TU1.c **** **            Event mask                                   : 
  41:../Generated_Code/TU1.c **** **              OnCounterRestart                           : Disabled
  42:../Generated_Code/TU1.c **** **              OnChannel0                                 : Disabled
  43:../Generated_Code/TU1.c **** **              OnChannel1                                 : Disabled
  44:../Generated_Code/TU1.c **** **              OnChannel2                                 : Disabled
  45:../Generated_Code/TU1.c **** **              OnChannel3                                 : Disabled
  46:../Generated_Code/TU1.c **** **              OnChannel4                                 : Disabled
  47:../Generated_Code/TU1.c **** **              OnChannel5                                 : Disabled
  48:../Generated_Code/TU1.c **** **              OnChannel6                                 : Disabled
  49:../Generated_Code/TU1.c **** **              OnChannel7                                 : Disabled
  50:../Generated_Code/TU1.c **** **          CPU clock/configuration selection              : 
  51:../Generated_Code/TU1.c **** **            Clock configuration 0                        : This component enabled
  52:../Generated_Code/TU1.c **** **            Clock configuration 1                        : This component disabled
  53:../Generated_Code/TU1.c **** **            Clock configuration 2                        : This component disabled
  54:../Generated_Code/TU1.c **** **            Clock configuration 3                        : This component disabled
  55:../Generated_Code/TU1.c **** **            Clock configuration 4                        : This component disabled
  56:../Generated_Code/TU1.c **** **            Clock configuration 5                        : This component disabled
  57:../Generated_Code/TU1.c **** **            Clock configuration 6                        : This component disabled
  58:../Generated_Code/TU1.c **** **            Clock configuration 7                        : This component disabled
  59:../Generated_Code/TU1.c **** **     Contents    :
  60:../Generated_Code/TU1.c **** **         Init               - LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr);
  61:../Generated_Code/TU1.c **** **         GetPeriodTicks     - LDD_TError TU1_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU1_T
  62:../Generated_Code/TU1.c **** **         GetCounterValue    - TU1_TValueType TU1_GetCounterValue(LDD_TDeviceData *DeviceDataPtr);
  63:../Generated_Code/TU1.c **** **         SetOffsetTicks     - LDD_TError TU1_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  64:../Generated_Code/TU1.c **** **         GetOffsetTicks     - LDD_TError TU1_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  65:../Generated_Code/TU1.c **** **         SelectOutputAction - LDD_TError TU1_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, u
  66:../Generated_Code/TU1.c **** **
  67:../Generated_Code/TU1.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  68:../Generated_Code/TU1.c **** **     All Rights Reserved.
  69:../Generated_Code/TU1.c **** **     
  70:../Generated_Code/TU1.c **** **     Redistribution and use in source and binary forms, with or without modification,
  71:../Generated_Code/TU1.c **** **     are permitted provided that the following conditions are met:
  72:../Generated_Code/TU1.c **** **     
  73:../Generated_Code/TU1.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  74:../Generated_Code/TU1.c **** **       of conditions and the following disclaimer.
  75:../Generated_Code/TU1.c **** **     
  76:../Generated_Code/TU1.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  77:../Generated_Code/TU1.c **** **       list of conditions and the following disclaimer in the documentation and/or
  78:../Generated_Code/TU1.c **** **       other materials provided with the distribution.
  79:../Generated_Code/TU1.c **** **     
  80:../Generated_Code/TU1.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  81:../Generated_Code/TU1.c **** **       contributors may be used to endorse or promote products derived from this
  82:../Generated_Code/TU1.c **** **       software without specific prior written permission.
  83:../Generated_Code/TU1.c **** **     
  84:../Generated_Code/TU1.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  85:../Generated_Code/TU1.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  86:../Generated_Code/TU1.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  87:../Generated_Code/TU1.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  88:../Generated_Code/TU1.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  89:../Generated_Code/TU1.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  90:../Generated_Code/TU1.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  91:../Generated_Code/TU1.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  92:../Generated_Code/TU1.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  93:../Generated_Code/TU1.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  94:../Generated_Code/TU1.c **** **     
  95:../Generated_Code/TU1.c **** **     http: www.freescale.com
  96:../Generated_Code/TU1.c **** **     mail: support@freescale.com
  97:../Generated_Code/TU1.c **** ** ###################################################################*/
  98:../Generated_Code/TU1.c **** /*!
  99:../Generated_Code/TU1.c **** ** @file TU1.c
 100:../Generated_Code/TU1.c **** ** @version 01.11
 101:../Generated_Code/TU1.c **** ** @brief
 102:../Generated_Code/TU1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
 103:../Generated_Code/TU1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
 104:../Generated_Code/TU1.c **** */         
 105:../Generated_Code/TU1.c **** /*!
 106:../Generated_Code/TU1.c **** **  @addtogroup TU1_module TU1 module documentation
 107:../Generated_Code/TU1.c **** **  @{
 108:../Generated_Code/TU1.c **** */         
 109:../Generated_Code/TU1.c **** 
 110:../Generated_Code/TU1.c **** /* MODULE TU1. */
 111:../Generated_Code/TU1.c **** 
 112:../Generated_Code/TU1.c **** #include "TU1.h"
 113:../Generated_Code/TU1.c **** /* {Default RTOS Adapter} No RTOS includes */
 114:../Generated_Code/TU1.c **** #include "IO_Map.h"
 115:../Generated_Code/TU1.c **** 
 116:../Generated_Code/TU1.c **** #ifdef __cplusplus
 117:../Generated_Code/TU1.c **** extern "C" {
 118:../Generated_Code/TU1.c **** #endif 
 119:../Generated_Code/TU1.c **** 
 120:../Generated_Code/TU1.c **** /* List of channels used by component */
 121:../Generated_Code/TU1.c **** static const uint8_t ChannelDevice[TU1_NUMBER_OF_CHANNELS] = {0x02U};
 122:../Generated_Code/TU1.c **** 
 123:../Generated_Code/TU1.c **** /* Table of channels mode / 0 - compare mode, 1 - capture mode */
 124:../Generated_Code/TU1.c **** static const uint8_t ChannelMode[TU1_NUMBER_OF_CHANNELS] = {0x00U};
 125:../Generated_Code/TU1.c **** 
 126:../Generated_Code/TU1.c **** 
 127:../Generated_Code/TU1.c **** typedef struct {
 128:../Generated_Code/TU1.c ****   uint8_t InitCntr;                    /* Number of initialization */
 129:../Generated_Code/TU1.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 130:../Generated_Code/TU1.c **** } TU1_TDeviceData;
 131:../Generated_Code/TU1.c **** 
 132:../Generated_Code/TU1.c **** typedef TU1_TDeviceData *TU1_TDeviceDataPtr; /* Pointer to the device data structure. */
 133:../Generated_Code/TU1.c **** 
 134:../Generated_Code/TU1.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 135:../Generated_Code/TU1.c **** static TU1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 136:../Generated_Code/TU1.c **** 
 137:../Generated_Code/TU1.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(TU1_CHANNEL_0_PIN)
 138:../Generated_Code/TU1.c **** #define LAST_CHANNEL 0x00U
 139:../Generated_Code/TU1.c **** 
 140:../Generated_Code/TU1.c **** /* Internal method prototypes */
 141:../Generated_Code/TU1.c **** /*
 142:../Generated_Code/TU1.c **** ** ===================================================================
 143:../Generated_Code/TU1.c **** **     Method      :  TU1_Init (component TimerUnit_LDD)
 144:../Generated_Code/TU1.c **** */
 145:../Generated_Code/TU1.c **** /*!
 146:../Generated_Code/TU1.c **** **     @brief
 147:../Generated_Code/TU1.c **** **         Initializes the device. Allocates memory for the device data
 148:../Generated_Code/TU1.c **** **         structure, allocates interrupt vectors and sets interrupt
 149:../Generated_Code/TU1.c **** **         priority, sets pin routing, sets timing, etc. If the
 150:../Generated_Code/TU1.c **** **         property ["Enable in init. code"] is set to "yes" value then
 151:../Generated_Code/TU1.c **** **         the device is also enabled (see the description of the
 152:../Generated_Code/TU1.c **** **         [Enable] method). In this case the [Enable] method is not
 153:../Generated_Code/TU1.c **** **         necessary and needn't to be generated. This method can be
 154:../Generated_Code/TU1.c **** **         called only once. Before the second call of Init the [Deinit]
 155:../Generated_Code/TU1.c **** **         must be called first.
 156:../Generated_Code/TU1.c **** **     @param
 157:../Generated_Code/TU1.c **** **         UserDataPtr     - Pointer to the user or
 158:../Generated_Code/TU1.c **** **                           RTOS specific data. This pointer will be
 159:../Generated_Code/TU1.c **** **                           passed as an event or callback parameter.
 160:../Generated_Code/TU1.c **** **     @return
 161:../Generated_Code/TU1.c **** **                         - Pointer to the dynamically allocated private
 162:../Generated_Code/TU1.c **** **                           structure or NULL if there was an error.
 163:../Generated_Code/TU1.c **** */
 164:../Generated_Code/TU1.c **** /* ===================================================================*/
 165:../Generated_Code/TU1.c **** LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr)
 166:../Generated_Code/TU1.c **** {
  44              		.loc 1 166 0
  45              		.cfi_startproc
  46 0000 80B5     		push	{r7, lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 84B0     		sub	sp, sp, #16
  52              	.LCFI1:
  53              		.cfi_def_cfa_offset 24
  54 0004 00AF     		add	r7, sp, #0
  55              	.LCFI2:
  56              		.cfi_def_cfa_register 7
  57 0006 7860     		str	r0, [r7, #4]
 167:../Generated_Code/TU1.c ****   TU1_TDeviceData *DeviceDataPrv;
 168:../Generated_Code/TU1.c **** 
 169:../Generated_Code/TU1.c ****   if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID] == NULL) {
  58              		.loc 1 169 0
  59 0008 2B4B     		ldr	r3, .L4
  60 000a 9B68     		ldr	r3, [r3, #8]
  61 000c 002B     		cmp	r3, #0
  62 000e 42D1     		bne	.L2
 170:../Generated_Code/TU1.c ****     /* Allocate device structure */
 171:../Generated_Code/TU1.c ****     /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointe
 172:../Generated_Code/TU1.c ****     DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  63              		.loc 1 172 0
  64 0010 2A4B     		ldr	r3, .L4+4
  65 0012 FB60     		str	r3, [r7, #12]
 173:../Generated_Code/TU1.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  66              		.loc 1 173 0
  67 0014 FB68     		ldr	r3, [r7, #12]
  68 0016 7A68     		ldr	r2, [r7, #4]
  69 0018 5A60     		str	r2, [r3, #4]
 174:../Generated_Code/TU1.c ****     DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  70              		.loc 1 174 0
  71 001a FB68     		ldr	r3, [r7, #12]
  72 001c 0122     		mov	r2, #1
  73 001e 1A70     		strb	r2, [r3]
 175:../Generated_Code/TU1.c ****   }
 176:../Generated_Code/TU1.c ****   else {
 177:../Generated_Code/TU1.c ****     /* Memory is already allocated */
 178:../Generated_Code/TU1.c ****     DeviceDataPrv = (TU1_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID];
 179:../Generated_Code/TU1.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 180:../Generated_Code/TU1.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 181:../Generated_Code/TU1.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 182:../Generated_Code/TU1.c ****   }
 183:../Generated_Code/TU1.c ****   /* SIM_SCGC6: TPM0=1 */
 184:../Generated_Code/TU1.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;
  74              		.loc 1 184 0
  75 0020 274A     		ldr	r2, .L4+8
  76 0022 2749     		ldr	r1, .L4+8
  77 0024 274B     		ldr	r3, .L4+12
  78 0026 CB58     		ldr	r3, [r1, r3]
  79 0028 8021     		mov	r1, #128
  80 002a 4904     		lsl	r1, r1, #17
  81 002c 1943     		orr	r1, r3
  82 002e 254B     		ldr	r3, .L4+12
  83 0030 D150     		str	r1, [r2, r3]
 185:../Generated_Code/TU1.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 186:../Generated_Code/TU1.c ****   TPM0_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
  84              		.loc 1 186 0
  85 0032 254B     		ldr	r3, .L4+16
  86 0034 0022     		mov	r2, #0
  87 0036 1A60     		str	r2, [r3]
 187:../Generated_Code/TU1.c ****   /* TPM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 188:../Generated_Code/TU1.c ****   TPM0_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
  88              		.loc 1 188 0
  89 0038 234B     		ldr	r3, .L4+16
  90 003a 0022     		mov	r2, #0
  91 003c 5A60     		str	r2, [r3, #4]
 189:../Generated_Code/TU1.c ****   /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 190:../Generated_Code/TU1.c ****   TPM0_C0SC = 0x00U;                   /* Clear channel status and control register */
  92              		.loc 1 190 0
  93 003e 224B     		ldr	r3, .L4+16
  94 0040 0022     		mov	r2, #0
  95 0042 DA60     		str	r2, [r3, #12]
 191:../Generated_Code/TU1.c ****   /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 192:../Generated_Code/TU1.c ****   TPM0_C1SC = 0x00U;                   /* Clear channel status and control register */
  96              		.loc 1 192 0
  97 0044 204B     		ldr	r3, .L4+16
  98 0046 0022     		mov	r2, #0
  99 0048 5A61     		str	r2, [r3, #20]
 193:../Generated_Code/TU1.c ****   /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 194:../Generated_Code/TU1.c ****   TPM0_C2SC = 0x00U;                   /* Clear channel status and control register */
 100              		.loc 1 194 0
 101 004a 1F4B     		ldr	r3, .L4+16
 102 004c 0022     		mov	r2, #0
 103 004e DA61     		str	r2, [r3, #28]
 195:../Generated_Code/TU1.c ****   /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 196:../Generated_Code/TU1.c ****   TPM0_C3SC = 0x00U;                   /* Clear channel status and control register */
 104              		.loc 1 196 0
 105 0050 1D4B     		ldr	r3, .L4+16
 106 0052 0022     		mov	r2, #0
 107 0054 5A62     		str	r2, [r3, #36]
 197:../Generated_Code/TU1.c ****   /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 198:../Generated_Code/TU1.c ****   TPM0_C4SC = 0x00U;                   /* Clear channel status and control register */
 108              		.loc 1 198 0
 109 0056 1C4B     		ldr	r3, .L4+16
 110 0058 0022     		mov	r2, #0
 111 005a DA62     		str	r2, [r3, #44]
 199:../Generated_Code/TU1.c ****   /* TPM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 200:../Generated_Code/TU1.c ****   TPM0_C5SC = 0x00U;                   /* Clear channel status and control register */
 112              		.loc 1 200 0
 113 005c 1A4B     		ldr	r3, .L4+16
 114 005e 0022     		mov	r2, #0
 115 0060 5A63     		str	r2, [r3, #52]
 201:../Generated_Code/TU1.c ****   /* TPM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 202:../Generated_Code/TU1.c ****   TPM0_MOD = TPM_MOD_MOD(0x2F);        /* Set up modulo register */
 116              		.loc 1 202 0
 117 0062 194B     		ldr	r3, .L4+16
 118 0064 2F22     		mov	r2, #47
 119 0066 9A60     		str	r2, [r3, #8]
 203:../Generated_Code/TU1.c ****   /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 204:../Generated_Code/TU1.c ****   TPM0_C2SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 120              		.loc 1 204 0
 121 0068 174B     		ldr	r3, .L4+16
 122 006a 2C22     		mov	r2, #44
 123 006c DA61     		str	r2, [r3, #28]
 205:../Generated_Code/TU1.c ****   /* TPM0_C2V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 206:../Generated_Code/TU1.c ****   TPM0_C2V = TPM_CnV_VAL(0x18);        /* Set up channel value register */
 124              		.loc 1 206 0
 125 006e 164B     		ldr	r3, .L4+16
 126 0070 1822     		mov	r2, #24
 127 0072 1A62     		str	r2, [r3, #32]
 207:../Generated_Code/TU1.c ****   /* PORTC_PCR3: ISF=0,MUX=4 */
 208:../Generated_Code/TU1.c ****   PORTC_PCR3 = (uint32_t)((PORTC_PCR3 & (uint32_t)~(uint32_t)(
 128              		.loc 1 208 0
 129 0074 154B     		ldr	r3, .L4+20
 130 0076 154A     		ldr	r2, .L4+20
 131 0078 D168     		ldr	r1, [r2, #12]
 132 007a 154A     		ldr	r2, .L4+24
 133 007c 0A40     		and	r2, r1
 134 007e 8021     		mov	r1, #128
 135 0080 C900     		lsl	r1, r1, #3
 136 0082 0A43     		orr	r2, r1
 137 0084 DA60     		str	r2, [r3, #12]
 209:../Generated_Code/TU1.c ****                 PORT_PCR_ISF_MASK |
 210:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x03)
 211:../Generated_Code/TU1.c ****                )) | (uint32_t)(
 212:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x04)
 213:../Generated_Code/TU1.c ****                ));
 214:../Generated_Code/TU1.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 215:../Generated_Code/TU1.c ****   TPM0_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x00)); /* Set up status and control register */
 138              		.loc 1 215 0
 139 0086 104B     		ldr	r3, .L4+16
 140 0088 0822     		mov	r2, #8
 141 008a 1A60     		str	r2, [r3]
 216:../Generated_Code/TU1.c ****   /* Registration of the device structure */
 217:../Generated_Code/TU1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
 142              		.loc 1 217 0
 143 008c 0A4B     		ldr	r3, .L4
 144 008e FA68     		ldr	r2, [r7, #12]
 145 0090 9A60     		str	r2, [r3, #8]
 218:../Generated_Code/TU1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 146              		.loc 1 218 0
 147 0092 FB68     		ldr	r3, [r7, #12]
 148 0094 0CE0     		b	.L3
 149              	.L2:
 178:../Generated_Code/TU1.c ****     DeviceDataPrv = (TU1_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID];
 150              		.loc 1 178 0
 151 0096 084B     		ldr	r3, .L4
 152 0098 9B68     		ldr	r3, [r3, #8]
 153 009a FB60     		str	r3, [r7, #12]
 179:../Generated_Code/TU1.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 154              		.loc 1 179 0
 155 009c FB68     		ldr	r3, [r7, #12]
 156 009e 7A68     		ldr	r2, [r7, #4]
 157 00a0 5A60     		str	r2, [r3, #4]
 180:../Generated_Code/TU1.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 158              		.loc 1 180 0
 159 00a2 FB68     		ldr	r3, [r7, #12]
 160 00a4 1B78     		ldrb	r3, [r3]
 161 00a6 0133     		add	r3, r3, #1
 162 00a8 DAB2     		uxtb	r2, r3
 163 00aa FB68     		ldr	r3, [r7, #12]
 164 00ac 1A70     		strb	r2, [r3]
 181:../Generated_Code/TU1.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 165              		.loc 1 181 0
 166 00ae FB68     		ldr	r3, [r7, #12]
 167              	.L3:
 219:../Generated_Code/TU1.c **** }
 168              		.loc 1 219 0
 169 00b0 181C     		mov	r0, r3
 170 00b2 BD46     		mov	sp, r7
 171 00b4 04B0     		add	sp, sp, #16
 172              		@ sp needed for prologue
 173 00b6 80BD     		pop	{r7, pc}
 174              	.L5:
 175              		.align	2
 176              	.L4:
 177 00b8 00000000 		.word	PE_LDD_DeviceDataList
 178 00bc 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 179 00c0 00700440 		.word	1074032640
 180 00c4 3C100000 		.word	4156
 181 00c8 00800340 		.word	1073971200
 182 00cc 00B00440 		.word	1074049024
 183 00d0 FFF8FFFE 		.word	-16779009
 184              		.cfi_endproc
 185              	.LFE0:
 187              		.section	.text.TU1_GetPeriodTicks,"ax",%progbits
 188              		.align	2
 189              		.global	TU1_GetPeriodTicks
 190              		.code	16
 191              		.thumb_func
 193              	TU1_GetPeriodTicks:
 194              	.LFB1:
 220:../Generated_Code/TU1.c **** 
 221:../Generated_Code/TU1.c **** /*
 222:../Generated_Code/TU1.c **** ** ===================================================================
 223:../Generated_Code/TU1.c **** **     Method      :  TU1_GetPeriodTicks (component TimerUnit_LDD)
 224:../Generated_Code/TU1.c **** */
 225:../Generated_Code/TU1.c **** /*!
 226:../Generated_Code/TU1.c **** **     @brief
 227:../Generated_Code/TU1.c **** **         Returns the number of counter ticks before re-initialization.
 228:../Generated_Code/TU1.c **** **         See also method [SetPeriodTicks]. This method is available
 229:../Generated_Code/TU1.c **** **         only if the property ["Counter restart"] is switched to
 230:../Generated_Code/TU1.c **** **         'on-match' value.
 231:../Generated_Code/TU1.c **** **     @param
 232:../Generated_Code/TU1.c **** **         DeviceDataPtr   - Device data structure
 233:../Generated_Code/TU1.c **** **                           pointer returned by [Init] method.
 234:../Generated_Code/TU1.c **** **     @param
 235:../Generated_Code/TU1.c **** **         TicksPtr        - Pointer to return value of the
 236:../Generated_Code/TU1.c **** **                           number of counter ticks before
 237:../Generated_Code/TU1.c **** **                           re-initialization
 238:../Generated_Code/TU1.c **** **     @return
 239:../Generated_Code/TU1.c **** **                         - Error code, possible codes:
 240:../Generated_Code/TU1.c **** **                           ERR_OK - OK 
 241:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 242:../Generated_Code/TU1.c **** **                           the active clock configuration
 243:../Generated_Code/TU1.c **** */
 244:../Generated_Code/TU1.c **** /* ===================================================================*/
 245:../Generated_Code/TU1.c **** LDD_TError TU1_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU1_TValueType *TicksPtr)
 246:../Generated_Code/TU1.c **** {
 195              		.loc 1 246 0
 196              		.cfi_startproc
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI3:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 84B0     		sub	sp, sp, #16
 203              	.LCFI4:
 204              		.cfi_def_cfa_offset 24
 205 0004 00AF     		add	r7, sp, #0
 206              	.LCFI5:
 207              		.cfi_def_cfa_register 7
 208 0006 7860     		str	r0, [r7, #4]
 209 0008 3960     		str	r1, [r7]
 247:../Generated_Code/TU1.c ****   uint16_t tmp;
 248:../Generated_Code/TU1.c **** 
 249:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 250:../Generated_Code/TU1.c ****   tmp = (uint16_t)(TPM_PDD_ReadModuloReg(TPM0_BASE_PTR));
 210              		.loc 1 250 0
 211 000a 0B4B     		ldr	r3, .L8
 212 000c 9A68     		ldr	r2, [r3, #8]
 213 000e 3B1C     		mov	r3, r7
 214 0010 0E33     		add	r3, r3, #14
 215 0012 1A80     		strh	r2, [r3]
 251:../Generated_Code/TU1.c ****   *TicksPtr = (TU1_TValueType)++tmp;
 216              		.loc 1 251 0
 217 0014 3B1C     		mov	r3, r7
 218 0016 0E33     		add	r3, r3, #14
 219 0018 3A1C     		mov	r2, r7
 220 001a 0E32     		add	r2, r2, #14
 221 001c 1288     		ldrh	r2, [r2]
 222 001e 0132     		add	r2, r2, #1
 223 0020 1A80     		strh	r2, [r3]
 224 0022 3B68     		ldr	r3, [r7]
 225 0024 3A1C     		mov	r2, r7
 226 0026 0E32     		add	r2, r2, #14
 227 0028 1288     		ldrh	r2, [r2]
 228 002a 1A80     		strh	r2, [r3]
 252:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 229              		.loc 1 252 0
 230 002c 0023     		mov	r3, #0
 253:../Generated_Code/TU1.c **** }
 231              		.loc 1 253 0
 232 002e 181C     		mov	r0, r3
 233 0030 BD46     		mov	sp, r7
 234 0032 04B0     		add	sp, sp, #16
 235              		@ sp needed for prologue
 236 0034 80BD     		pop	{r7, pc}
 237              	.L9:
 238 0036 C046     		.align	2
 239              	.L8:
 240 0038 00800340 		.word	1073971200
 241              		.cfi_endproc
 242              	.LFE1:
 244              		.section	.text.TU1_GetCounterValue,"ax",%progbits
 245              		.align	2
 246              		.global	TU1_GetCounterValue
 247              		.code	16
 248              		.thumb_func
 250              	TU1_GetCounterValue:
 251              	.LFB2:
 254:../Generated_Code/TU1.c **** 
 255:../Generated_Code/TU1.c **** /*
 256:../Generated_Code/TU1.c **** ** ===================================================================
 257:../Generated_Code/TU1.c **** **     Method      :  TU1_GetCounterValue (component TimerUnit_LDD)
 258:../Generated_Code/TU1.c **** */
 259:../Generated_Code/TU1.c **** /*!
 260:../Generated_Code/TU1.c **** **     @brief
 261:../Generated_Code/TU1.c **** **         Returns the content of counter register. This method can be
 262:../Generated_Code/TU1.c **** **         used both if counter is enabled and if counter is disabled.
 263:../Generated_Code/TU1.c **** **         The method is not available if HW doesn't allow reading of
 264:../Generated_Code/TU1.c **** **         the counter.
 265:../Generated_Code/TU1.c **** **     @param
 266:../Generated_Code/TU1.c **** **         DeviceDataPtr   - Device data structure
 267:../Generated_Code/TU1.c **** **                           pointer returned by [Init] method.
 268:../Generated_Code/TU1.c **** **     @return
 269:../Generated_Code/TU1.c **** **                         - Counter value (number of counted ticks).
 270:../Generated_Code/TU1.c **** */
 271:../Generated_Code/TU1.c **** /* ===================================================================*/
 272:../Generated_Code/TU1.c **** TU1_TValueType TU1_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 273:../Generated_Code/TU1.c **** {
 252              		.loc 1 273 0
 253              		.cfi_startproc
 254 0000 80B5     		push	{r7, lr}
 255              	.LCFI6:
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
 260              	.LCFI7:
 261              		.cfi_def_cfa_offset 16
 262 0004 00AF     		add	r7, sp, #0
 263              	.LCFI8:
 264              		.cfi_def_cfa_register 7
 265 0006 7860     		str	r0, [r7, #4]
 274:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 275:../Generated_Code/TU1.c ****   return (TU1_TValueType)TPM_PDD_ReadCounterReg(TPM0_BASE_PTR);
 266              		.loc 1 275 0
 267 0008 034B     		ldr	r3, .L12
 268 000a 5B68     		ldr	r3, [r3, #4]
 269 000c 9BB2     		uxth	r3, r3
 276:../Generated_Code/TU1.c **** }
 270              		.loc 1 276 0
 271 000e 181C     		mov	r0, r3
 272 0010 BD46     		mov	sp, r7
 273 0012 02B0     		add	sp, sp, #8
 274              		@ sp needed for prologue
 275 0014 80BD     		pop	{r7, pc}
 276              	.L13:
 277 0016 C046     		.align	2
 278              	.L12:
 279 0018 00800340 		.word	1073971200
 280              		.cfi_endproc
 281              	.LFE2:
 283              		.section	.text.TU1_SetOffsetTicks,"ax",%progbits
 284              		.align	2
 285              		.global	TU1_SetOffsetTicks
 286              		.code	16
 287              		.thumb_func
 289              	TU1_SetOffsetTicks:
 290              	.LFB3:
 277:../Generated_Code/TU1.c **** 
 278:../Generated_Code/TU1.c **** /*
 279:../Generated_Code/TU1.c **** ** ===================================================================
 280:../Generated_Code/TU1.c **** **     Method      :  TU1_SetOffsetTicks (component TimerUnit_LDD)
 281:../Generated_Code/TU1.c **** */
 282:../Generated_Code/TU1.c **** /*!
 283:../Generated_Code/TU1.c **** **     @brief
 284:../Generated_Code/TU1.c **** **         Sets the new offset value to channel specified by the
 285:../Generated_Code/TU1.c **** **         parameter ChannelIdx. It is user responsibility to use value
 286:../Generated_Code/TU1.c **** **         below selected period. This method is available when at
 287:../Generated_Code/TU1.c **** **         least one channel is configured.
 288:../Generated_Code/TU1.c **** **     @param
 289:../Generated_Code/TU1.c **** **         DeviceDataPtr   - Device data structure
 290:../Generated_Code/TU1.c **** **                           pointer returned by [Init] method.
 291:../Generated_Code/TU1.c **** **     @param
 292:../Generated_Code/TU1.c **** **         ChannelIdx      - Index of the component
 293:../Generated_Code/TU1.c **** **                           channel.
 294:../Generated_Code/TU1.c **** **     @param
 295:../Generated_Code/TU1.c **** **         Ticks           - Number of counter ticks to compare
 296:../Generated_Code/TU1.c **** **                           match.
 297:../Generated_Code/TU1.c **** **     @return
 298:../Generated_Code/TU1.c **** **                         - Error code, possible codes:
 299:../Generated_Code/TU1.c **** **                           ERR_OK - OK 
 300:../Generated_Code/TU1.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 301:../Generated_Code/TU1.c **** **                           out of possible range.
 302:../Generated_Code/TU1.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 303:../Generated_Code/TU1.c **** **                           selected for selected channel
 304:../Generated_Code/TU1.c **** **                           ERR_PARAM_TICKS - Ticks parameter is out of
 305:../Generated_Code/TU1.c **** **                           possible range.
 306:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 307:../Generated_Code/TU1.c **** **                           the active clock configuration
 308:../Generated_Code/TU1.c **** */
 309:../Generated_Code/TU1.c **** /* ===================================================================*/
 310:../Generated_Code/TU1.c **** LDD_TError TU1_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU1_TValueType Ti
 311:../Generated_Code/TU1.c **** {
 291              		.loc 1 311 0
 292              		.cfi_startproc
 293 0000 80B5     		push	{r7, lr}
 294              	.LCFI9:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 82B0     		sub	sp, sp, #8
 299              	.LCFI10:
 300              		.cfi_def_cfa_offset 16
 301 0004 00AF     		add	r7, sp, #0
 302              	.LCFI11:
 303              		.cfi_def_cfa_register 7
 304 0006 7860     		str	r0, [r7, #4]
 305 0008 FB1C     		add	r3, r7, #3
 306 000a 1970     		strb	r1, [r3]
 307 000c 3B1C     		mov	r3, r7
 308 000e 1A80     		strh	r2, [r3]
 312:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 313:../Generated_Code/TU1.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 314:../Generated_Code/TU1.c ****      property to the "yes" value in the "Configuration inspector" */
 315:../Generated_Code/TU1.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 309              		.loc 1 315 0
 310 0010 FB1C     		add	r3, r7, #3
 311 0012 1B78     		ldrb	r3, [r3]
 312 0014 002B     		cmp	r3, #0
 313 0016 01D0     		beq	.L15
 316:../Generated_Code/TU1.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 314              		.loc 1 316 0
 315 0018 8223     		mov	r3, #130
 316 001a 13E0     		b	.L16
 317              	.L15:
 317:../Generated_Code/TU1.c ****   }
 318:../Generated_Code/TU1.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 318              		.loc 1 318 0
 319 001c FB1C     		add	r3, r7, #3
 320 001e 1B78     		ldrb	r3, [r3]
 321 0020 0A4A     		ldr	r2, .L18
 322 0022 D35C     		ldrb	r3, [r2, r3]
 323 0024 002B     		cmp	r3, #0
 324 0026 01D0     		beq	.L17
 319:../Generated_Code/TU1.c ****     return ERR_NOTAVAIL;               /* If not then error */
 325              		.loc 1 319 0
 326 0028 0923     		mov	r3, #9
 327 002a 0BE0     		b	.L16
 328              	.L17:
 320:../Generated_Code/TU1.c ****   }
 321:../Generated_Code/TU1.c ****   TPM_PDD_WriteChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
 329              		.loc 1 321 0
 330 002c 0849     		ldr	r1, .L18+4
 331 002e FB1C     		add	r3, r7, #3
 332 0030 1B78     		ldrb	r3, [r3]
 333 0032 084A     		ldr	r2, .L18+8
 334 0034 D35C     		ldrb	r3, [r2, r3]
 335 0036 3A1C     		mov	r2, r7
 336 0038 1288     		ldrh	r2, [r2]
 337 003a 0133     		add	r3, r3, #1
 338 003c DB00     		lsl	r3, r3, #3
 339 003e CB18     		add	r3, r1, r3
 340 0040 9A60     		str	r2, [r3, #8]
 322:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 341              		.loc 1 322 0
 342 0042 0023     		mov	r3, #0
 343              	.L16:
 323:../Generated_Code/TU1.c **** }
 344              		.loc 1 323 0
 345 0044 181C     		mov	r0, r3
 346 0046 BD46     		mov	sp, r7
 347 0048 02B0     		add	sp, sp, #8
 348              		@ sp needed for prologue
 349 004a 80BD     		pop	{r7, pc}
 350              	.L19:
 351              		.align	2
 352              	.L18:
 353 004c 00000000 		.word	ChannelMode
 354 0050 00800340 		.word	1073971200
 355 0054 00000000 		.word	ChannelDevice
 356              		.cfi_endproc
 357              	.LFE3:
 359              		.section	.text.TU1_GetOffsetTicks,"ax",%progbits
 360              		.align	2
 361              		.global	TU1_GetOffsetTicks
 362              		.code	16
 363              		.thumb_func
 365              	TU1_GetOffsetTicks:
 366              	.LFB4:
 324:../Generated_Code/TU1.c **** 
 325:../Generated_Code/TU1.c **** /*
 326:../Generated_Code/TU1.c **** ** ===================================================================
 327:../Generated_Code/TU1.c **** **     Method      :  TU1_GetOffsetTicks (component TimerUnit_LDD)
 328:../Generated_Code/TU1.c **** */
 329:../Generated_Code/TU1.c **** /*!
 330:../Generated_Code/TU1.c **** **     @brief
 331:../Generated_Code/TU1.c **** **         Returns the number of counter ticks to compare match channel
 332:../Generated_Code/TU1.c **** **         specified by the parameter ChannelIdx. See also method
 333:../Generated_Code/TU1.c **** **         [SetOffsetTicks]. This method is available when at least one
 334:../Generated_Code/TU1.c **** **         channel is configured.
 335:../Generated_Code/TU1.c **** **     @param
 336:../Generated_Code/TU1.c **** **         DeviceDataPtr   - Device data structure
 337:../Generated_Code/TU1.c **** **                           pointer returned by [Init] method.
 338:../Generated_Code/TU1.c **** **     @param
 339:../Generated_Code/TU1.c **** **         ChannelIdx      - Index of the component
 340:../Generated_Code/TU1.c **** **                           channel.
 341:../Generated_Code/TU1.c **** **     @param
 342:../Generated_Code/TU1.c **** **         TicksPtr        - Pointer to return value of the
 343:../Generated_Code/TU1.c **** **                           number of counter ticks to compare match.
 344:../Generated_Code/TU1.c **** **     @return
 345:../Generated_Code/TU1.c **** **                         - Error code, possible codes:
 346:../Generated_Code/TU1.c **** **                           ERR_OK - OK 
 347:../Generated_Code/TU1.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 348:../Generated_Code/TU1.c **** **                           out of possible range.
 349:../Generated_Code/TU1.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 350:../Generated_Code/TU1.c **** **                           selected for selected channel.
 351:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 352:../Generated_Code/TU1.c **** **                           the active clock configuration
 353:../Generated_Code/TU1.c **** */
 354:../Generated_Code/TU1.c **** /* ===================================================================*/
 355:../Generated_Code/TU1.c **** LDD_TError TU1_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU1_TValueType *T
 356:../Generated_Code/TU1.c **** {
 367              		.loc 1 356 0
 368              		.cfi_startproc
 369 0000 80B5     		push	{r7, lr}
 370              	.LCFI12:
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 374 0002 84B0     		sub	sp, sp, #16
 375              	.LCFI13:
 376              		.cfi_def_cfa_offset 24
 377 0004 00AF     		add	r7, sp, #0
 378              	.LCFI14:
 379              		.cfi_def_cfa_register 7
 380 0006 F860     		str	r0, [r7, #12]
 381 0008 7A60     		str	r2, [r7, #4]
 382 000a 3B1C     		mov	r3, r7
 383 000c 0B33     		add	r3, r3, #11
 384 000e 0A1C     		add	r2, r1, #0
 385 0010 1A70     		strb	r2, [r3]
 357:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 358:../Generated_Code/TU1.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 359:../Generated_Code/TU1.c ****      property to the "yes" value in the "Configuration inspector" */
 360:../Generated_Code/TU1.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 386              		.loc 1 360 0
 387 0012 3B1C     		mov	r3, r7
 388 0014 0B33     		add	r3, r3, #11
 389 0016 1B78     		ldrb	r3, [r3]
 390 0018 002B     		cmp	r3, #0
 391 001a 01D0     		beq	.L21
 361:../Generated_Code/TU1.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 392              		.loc 1 361 0
 393 001c 8223     		mov	r3, #130
 394 001e 16E0     		b	.L22
 395              	.L21:
 362:../Generated_Code/TU1.c ****   }
 363:../Generated_Code/TU1.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 396              		.loc 1 363 0
 397 0020 3B1C     		mov	r3, r7
 398 0022 0B33     		add	r3, r3, #11
 399 0024 1B78     		ldrb	r3, [r3]
 400 0026 0C4A     		ldr	r2, .L24
 401 0028 D35C     		ldrb	r3, [r2, r3]
 402 002a 002B     		cmp	r3, #0
 403 002c 01D0     		beq	.L23
 364:../Generated_Code/TU1.c ****     return ERR_NOTAVAIL;               /* If not then error */
 404              		.loc 1 364 0
 405 002e 0923     		mov	r3, #9
 406 0030 0DE0     		b	.L22
 407              	.L23:
 365:../Generated_Code/TU1.c ****   }
 366:../Generated_Code/TU1.c ****   *TicksPtr = (TU1_TValueType)(TPM_PDD_ReadChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx]
 408              		.loc 1 366 0
 409 0032 0A4A     		ldr	r2, .L24+4
 410 0034 3B1C     		mov	r3, r7
 411 0036 0B33     		add	r3, r3, #11
 412 0038 1B78     		ldrb	r3, [r3]
 413 003a 0949     		ldr	r1, .L24+8
 414 003c CB5C     		ldrb	r3, [r1, r3]
 415 003e 0133     		add	r3, r3, #1
 416 0040 DB00     		lsl	r3, r3, #3
 417 0042 D318     		add	r3, r2, r3
 418 0044 9B68     		ldr	r3, [r3, #8]
 419 0046 9AB2     		uxth	r2, r3
 420 0048 7B68     		ldr	r3, [r7, #4]
 421 004a 1A80     		strh	r2, [r3]
 367:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 422              		.loc 1 367 0
 423 004c 0023     		mov	r3, #0
 424              	.L22:
 368:../Generated_Code/TU1.c **** }
 425              		.loc 1 368 0
 426 004e 181C     		mov	r0, r3
 427 0050 BD46     		mov	sp, r7
 428 0052 04B0     		add	sp, sp, #16
 429              		@ sp needed for prologue
 430 0054 80BD     		pop	{r7, pc}
 431              	.L25:
 432 0056 C046     		.align	2
 433              	.L24:
 434 0058 00000000 		.word	ChannelMode
 435 005c 00800340 		.word	1073971200
 436 0060 00000000 		.word	ChannelDevice
 437              		.cfi_endproc
 438              	.LFE4:
 440              		.section	.text.TU1_SelectOutputAction,"ax",%progbits
 441              		.align	2
 442              		.global	TU1_SelectOutputAction
 443              		.code	16
 444              		.thumb_func
 446              	TU1_SelectOutputAction:
 447              	.LFB5:
 369:../Generated_Code/TU1.c **** 
 370:../Generated_Code/TU1.c **** /*
 371:../Generated_Code/TU1.c **** ** ===================================================================
 372:../Generated_Code/TU1.c **** **     Method      :  TU1_SelectOutputAction (component TimerUnit_LDD)
 373:../Generated_Code/TU1.c **** */
 374:../Generated_Code/TU1.c **** /*!
 375:../Generated_Code/TU1.c **** **     @brief
 376:../Generated_Code/TU1.c **** **         Sets the type of compare match and counter overflow action
 377:../Generated_Code/TU1.c **** **         on channel output. This method is available when at least
 378:../Generated_Code/TU1.c **** **         one channel is configured.
 379:../Generated_Code/TU1.c **** **     @param
 380:../Generated_Code/TU1.c **** **         DeviceDataPtr   - Device data structure
 381:../Generated_Code/TU1.c **** **                           pointer returned by [Init] method.
 382:../Generated_Code/TU1.c **** **     @param
 383:../Generated_Code/TU1.c **** **         ChannelIdx      - Index of the component
 384:../Generated_Code/TU1.c **** **                           channel.
 385:../Generated_Code/TU1.c **** **     @param
 386:../Generated_Code/TU1.c **** **         CompareAction   - Select output action
 387:../Generated_Code/TU1.c **** **                           on compare match
 388:../Generated_Code/TU1.c **** **     @param
 389:../Generated_Code/TU1.c **** **         CounterAction   - Select output action
 390:../Generated_Code/TU1.c **** **                           on counter overflow
 391:../Generated_Code/TU1.c **** **     @return
 392:../Generated_Code/TU1.c **** **                         - Error code, possible codes:
 393:../Generated_Code/TU1.c **** **                           ERR_OK - OK
 394:../Generated_Code/TU1.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 395:../Generated_Code/TU1.c **** **                           out of possible range
 396:../Generated_Code/TU1.c **** **                           ERR_NOTAVAIL -  Action is not possible on
 397:../Generated_Code/TU1.c **** **                           selected channel or counter. Supported
 398:../Generated_Code/TU1.c **** **                           combinations are HW specific.
 399:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 400:../Generated_Code/TU1.c **** **                           the active clock configuration
 401:../Generated_Code/TU1.c **** */
 402:../Generated_Code/TU1.c **** /* ===================================================================*/
 403:../Generated_Code/TU1.c **** LDD_TError TU1_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, LDD_TimerUnit
 404:../Generated_Code/TU1.c **** {
 448              		.loc 1 404 0
 449              		.cfi_startproc
 450 0000 90B5     		push	{r4, r7, lr}
 451              	.LCFI15:
 452              		.cfi_def_cfa_offset 12
 453              		.cfi_offset 4, -12
 454              		.cfi_offset 7, -8
 455              		.cfi_offset 14, -4
 456 0002 83B0     		sub	sp, sp, #12
 457              	.LCFI16:
 458              		.cfi_def_cfa_offset 24
 459 0004 00AF     		add	r7, sp, #0
 460              	.LCFI17:
 461              		.cfi_def_cfa_register 7
 462 0006 7860     		str	r0, [r7, #4]
 463 0008 081C     		mov	r0, r1
 464 000a 111C     		mov	r1, r2
 465 000c 1A1C     		mov	r2, r3
 466 000e FB1C     		add	r3, r7, #3
 467 0010 1870     		strb	r0, [r3]
 468 0012 BB1C     		add	r3, r7, #2
 469 0014 1970     		strb	r1, [r3]
 470 0016 7B1C     		add	r3, r7, #1
 471 0018 1A70     		strb	r2, [r3]
 405:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 406:../Generated_Code/TU1.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 407:../Generated_Code/TU1.c ****      property to the "yes" value in the "Configuration inspector" */
 408:../Generated_Code/TU1.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 472              		.loc 1 408 0
 473 001a FB1C     		add	r3, r7, #3
 474 001c 1B78     		ldrb	r3, [r3]
 475 001e 002B     		cmp	r3, #0
 476 0020 01D0     		beq	.L27
 409:../Generated_Code/TU1.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 477              		.loc 1 409 0
 478 0022 8223     		mov	r3, #130
 479 0024 06E1     		b	.L28
 480              	.L27:
 410:../Generated_Code/TU1.c ****   }
 411:../Generated_Code/TU1.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 481              		.loc 1 411 0
 482 0026 FB1C     		add	r3, r7, #3
 483 0028 1B78     		ldrb	r3, [r3]
 484 002a 844A     		ldr	r2, .L45
 485 002c D35C     		ldrb	r3, [r2, r3]
 486 002e 002B     		cmp	r3, #0
 487 0030 01D0     		beq	.L29
 412:../Generated_Code/TU1.c ****     return ERR_NOTAVAIL;               /* If not then error */
 488              		.loc 1 412 0
 489 0032 0923     		mov	r3, #9
 490 0034 FEE0     		b	.L28
 491              	.L29:
 413:../Generated_Code/TU1.c ****   }
 414:../Generated_Code/TU1.c ****   switch (CounterAction) {
 492              		.loc 1 414 0
 493 0036 7B1C     		add	r3, r7, #1
 494 0038 1B78     		ldrb	r3, [r3]
 495 003a 022B     		cmp	r3, #2
 496 003c 00D1     		bne	.LCB421
 497 003e 8CE0     		b	.L32	@long jump
 498              	.LCB421:
 499 0040 032B     		cmp	r3, #3
 500 0042 00D1     		bne	.LCB423
 501 0044 BEE0     		b	.L33	@long jump
 502              	.LCB423:
 503 0046 002B     		cmp	r3, #0
 504 0048 00D0     		beq	.LCB425
 505 004a F0E0     		b	.L44	@long jump
 506              	.LCB425:
 507              	.L31:
 415:../Generated_Code/TU1.c ****     case OUTPUT_NONE:
 416:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_TOGGLE);
 508              		.loc 1 416 0
 509 004c 7C49     		ldr	r1, .L45+4
 510 004e FB1C     		add	r3, r7, #3
 511 0050 1B78     		ldrb	r3, [r3]
 512 0052 7C4A     		ldr	r2, .L45+8
 513 0054 D35C     		ldrb	r3, [r2, r3]
 514 0056 181C     		mov	r0, r3
 515 0058 794A     		ldr	r2, .L45+4
 516 005a FB1C     		add	r3, r7, #3
 517 005c 1B78     		ldrb	r3, [r3]
 518 005e 794C     		ldr	r4, .L45+8
 519 0060 E35C     		ldrb	r3, [r4, r3]
 520 0062 0133     		add	r3, r3, #1
 521 0064 DB00     		lsl	r3, r3, #3
 522 0066 D318     		add	r3, r2, r3
 523 0068 5B68     		ldr	r3, [r3, #4]
 524 006a B022     		mov	r2, #176
 525 006c 9343     		bic	r3, r2
 526 006e 1022     		mov	r2, #16
 527 0070 1A43     		orr	r2, r3
 528 0072 431C     		add	r3, r0, #1
 529 0074 DB00     		lsl	r3, r3, #3
 530 0076 CB18     		add	r3, r1, r3
 531 0078 5A60     		str	r2, [r3, #4]
 417:../Generated_Code/TU1.c ****       switch (CompareAction) {
 532              		.loc 1 417 0
 533 007a BB1C     		add	r3, r7, #2
 534 007c 1B78     		ldrb	r3, [r3]
 535 007e 012B     		cmp	r3, #1
 536 0080 20D0     		beq	.L36
 537 0082 02DC     		bgt	.L39
 538 0084 002B     		cmp	r3, #0
 539 0086 05D0     		beq	.L35
 540 0088 64E0     		b	.L34
 541              	.L39:
 542 008a 022B     		cmp	r3, #2
 543 008c 32D0     		beq	.L37
 544 008e 032B     		cmp	r3, #3
 545 0090 48D0     		beq	.L38
 546 0092 5FE0     		b	.L34
 547              	.L35:
 418:../Generated_Code/TU1.c ****         case OUTPUT_NONE:
 419:../Generated_Code/TU1.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_NON
 548              		.loc 1 419 0
 549 0094 6A49     		ldr	r1, .L45+4
 550 0096 FB1C     		add	r3, r7, #3
 551 0098 1B78     		ldrb	r3, [r3]
 552 009a 6A4A     		ldr	r2, .L45+8
 553 009c D35C     		ldrb	r3, [r2, r3]
 554 009e 181C     		mov	r0, r3
 555 00a0 674A     		ldr	r2, .L45+4
 556 00a2 FB1C     		add	r3, r7, #3
 557 00a4 1B78     		ldrb	r3, [r3]
 558 00a6 674C     		ldr	r4, .L45+8
 559 00a8 E35C     		ldrb	r3, [r4, r3]
 560 00aa 0133     		add	r3, r3, #1
 561 00ac DB00     		lsl	r3, r3, #3
 562 00ae D318     		add	r3, r2, r3
 563 00b0 5B68     		ldr	r3, [r3, #4]
 564 00b2 8C22     		mov	r2, #140
 565 00b4 1C1C     		mov	r4, r3
 566 00b6 9443     		bic	r4, r2
 567 00b8 221C     		mov	r2, r4
 568 00ba 431C     		add	r3, r0, #1
 569 00bc DB00     		lsl	r3, r3, #3
 570 00be CB18     		add	r3, r1, r3
 571 00c0 5A60     		str	r2, [r3, #4]
 420:../Generated_Code/TU1.c ****           break;
 572              		.loc 1 420 0
 573 00c2 49E0     		b	.L40
 574              	.L36:
 421:../Generated_Code/TU1.c ****         case OUTPUT_TOGGLE:
 422:../Generated_Code/TU1.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_RIS
 575              		.loc 1 422 0
 576 00c4 5E49     		ldr	r1, .L45+4
 577 00c6 FB1C     		add	r3, r7, #3
 578 00c8 1B78     		ldrb	r3, [r3]
 579 00ca 5E4A     		ldr	r2, .L45+8
 580 00cc D35C     		ldrb	r3, [r2, r3]
 581 00ce 181C     		mov	r0, r3
 582 00d0 5B4A     		ldr	r2, .L45+4
 583 00d2 FB1C     		add	r3, r7, #3
 584 00d4 1B78     		ldrb	r3, [r3]
 585 00d6 5B4C     		ldr	r4, .L45+8
 586 00d8 E35C     		ldrb	r3, [r4, r3]
 587 00da 0133     		add	r3, r3, #1
 588 00dc DB00     		lsl	r3, r3, #3
 589 00de D318     		add	r3, r2, r3
 590 00e0 5B68     		ldr	r3, [r3, #4]
 591 00e2 8C22     		mov	r2, #140
 592 00e4 9343     		bic	r3, r2
 593 00e6 0422     		mov	r2, #4
 594 00e8 1A43     		orr	r2, r3
 595 00ea 431C     		add	r3, r0, #1
 596 00ec DB00     		lsl	r3, r3, #3
 597 00ee CB18     		add	r3, r1, r3
 598 00f0 5A60     		str	r2, [r3, #4]
 423:../Generated_Code/TU1.c ****           break;
 599              		.loc 1 423 0
 600 00f2 31E0     		b	.L40
 601              	.L37:
 424:../Generated_Code/TU1.c ****         case OUTPUT_CLEAR:
 425:../Generated_Code/TU1.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FAL
 602              		.loc 1 425 0
 603 00f4 5249     		ldr	r1, .L45+4
 604 00f6 FB1C     		add	r3, r7, #3
 605 00f8 1B78     		ldrb	r3, [r3]
 606 00fa 524A     		ldr	r2, .L45+8
 607 00fc D35C     		ldrb	r3, [r2, r3]
 608 00fe 181C     		mov	r0, r3
 609 0100 4F4A     		ldr	r2, .L45+4
 610 0102 FB1C     		add	r3, r7, #3
 611 0104 1B78     		ldrb	r3, [r3]
 612 0106 4F4C     		ldr	r4, .L45+8
 613 0108 E35C     		ldrb	r3, [r4, r3]
 614 010a 0133     		add	r3, r3, #1
 615 010c DB00     		lsl	r3, r3, #3
 616 010e D318     		add	r3, r2, r3
 617 0110 5B68     		ldr	r3, [r3, #4]
 618 0112 8C22     		mov	r2, #140
 619 0114 9343     		bic	r3, r2
 620 0116 0822     		mov	r2, #8
 621 0118 1A43     		orr	r2, r3
 622 011a 431C     		add	r3, r0, #1
 623 011c DB00     		lsl	r3, r3, #3
 624 011e CB18     		add	r3, r1, r3
 625 0120 5A60     		str	r2, [r3, #4]
 426:../Generated_Code/TU1.c ****           break;
 626              		.loc 1 426 0
 627 0122 19E0     		b	.L40
 628              	.L38:
 427:../Generated_Code/TU1.c ****         case OUTPUT_SET:
 428:../Generated_Code/TU1.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOT
 629              		.loc 1 428 0
 630 0124 4649     		ldr	r1, .L45+4
 631 0126 FB1C     		add	r3, r7, #3
 632 0128 1B78     		ldrb	r3, [r3]
 633 012a 464A     		ldr	r2, .L45+8
 634 012c D35C     		ldrb	r3, [r2, r3]
 635 012e 181C     		mov	r0, r3
 636 0130 434A     		ldr	r2, .L45+4
 637 0132 FB1C     		add	r3, r7, #3
 638 0134 1B78     		ldrb	r3, [r3]
 639 0136 434C     		ldr	r4, .L45+8
 640 0138 E35C     		ldrb	r3, [r4, r3]
 641 013a 0133     		add	r3, r3, #1
 642 013c DB00     		lsl	r3, r3, #3
 643 013e D318     		add	r3, r2, r3
 644 0140 5B68     		ldr	r3, [r3, #4]
 645 0142 8C22     		mov	r2, #140
 646 0144 9343     		bic	r3, r2
 647 0146 0C22     		mov	r2, #12
 648 0148 1A43     		orr	r2, r3
 649 014a 431C     		add	r3, r0, #1
 650 014c DB00     		lsl	r3, r3, #3
 651 014e CB18     		add	r3, r1, r3
 652 0150 5A60     		str	r2, [r3, #4]
 429:../Generated_Code/TU1.c ****           break;
 653              		.loc 1 429 0
 654 0152 01E0     		b	.L40
 655              	.L34:
 430:../Generated_Code/TU1.c ****         default:
 431:../Generated_Code/TU1.c ****           return ERR_NOTAVAIL;
 656              		.loc 1 431 0
 657 0154 0923     		mov	r3, #9
 658 0156 6DE0     		b	.L28
 659              	.L40:
 432:../Generated_Code/TU1.c ****       }
 433:../Generated_Code/TU1.c ****       break;
 660              		.loc 1 433 0
 661 0158 6BE0     		b	.L41
 662              	.L32:
 434:../Generated_Code/TU1.c ****     case OUTPUT_CLEAR:
 435:../Generated_Code/TU1.c ****       if (CompareAction != OUTPUT_SET) {
 663              		.loc 1 435 0
 664 015a BB1C     		add	r3, r7, #2
 665 015c 1B78     		ldrb	r3, [r3]
 666 015e 032B     		cmp	r3, #3
 667 0160 01D0     		beq	.L42
 436:../Generated_Code/TU1.c ****         return ERR_NOTAVAIL;
 668              		.loc 1 436 0
 669 0162 0923     		mov	r3, #9
 670 0164 66E0     		b	.L28
 671              	.L42:
 437:../Generated_Code/TU1.c ****       }
 438:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_CLEAR);
 672              		.loc 1 438 0
 673 0166 3649     		ldr	r1, .L45+4
 674 0168 FB1C     		add	r3, r7, #3
 675 016a 1B78     		ldrb	r3, [r3]
 676 016c 354A     		ldr	r2, .L45+8
 677 016e D35C     		ldrb	r3, [r2, r3]
 678 0170 181C     		mov	r0, r3
 679 0172 334A     		ldr	r2, .L45+4
 680 0174 FB1C     		add	r3, r7, #3
 681 0176 1B78     		ldrb	r3, [r3]
 682 0178 324C     		ldr	r4, .L45+8
 683 017a E35C     		ldrb	r3, [r4, r3]
 684 017c 0133     		add	r3, r3, #1
 685 017e DB00     		lsl	r3, r3, #3
 686 0180 D318     		add	r3, r2, r3
 687 0182 5B68     		ldr	r3, [r3, #4]
 688 0184 B022     		mov	r2, #176
 689 0186 9343     		bic	r3, r2
 690 0188 2022     		mov	r2, #32
 691 018a 1A43     		orr	r2, r3
 692 018c 431C     		add	r3, r0, #1
 693 018e DB00     		lsl	r3, r3, #3
 694 0190 CB18     		add	r3, r1, r3
 695 0192 5A60     		str	r2, [r3, #4]
 439:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOTH);
 696              		.loc 1 439 0
 697 0194 2A49     		ldr	r1, .L45+4
 698 0196 FB1C     		add	r3, r7, #3
 699 0198 1B78     		ldrb	r3, [r3]
 700 019a 2A4A     		ldr	r2, .L45+8
 701 019c D35C     		ldrb	r3, [r2, r3]
 702 019e 181C     		mov	r0, r3
 703 01a0 274A     		ldr	r2, .L45+4
 704 01a2 FB1C     		add	r3, r7, #3
 705 01a4 1B78     		ldrb	r3, [r3]
 706 01a6 274C     		ldr	r4, .L45+8
 707 01a8 E35C     		ldrb	r3, [r4, r3]
 708 01aa 0133     		add	r3, r3, #1
 709 01ac DB00     		lsl	r3, r3, #3
 710 01ae D318     		add	r3, r2, r3
 711 01b0 5B68     		ldr	r3, [r3, #4]
 712 01b2 8C22     		mov	r2, #140
 713 01b4 9343     		bic	r3, r2
 714 01b6 0C22     		mov	r2, #12
 715 01b8 1A43     		orr	r2, r3
 716 01ba 431C     		add	r3, r0, #1
 717 01bc DB00     		lsl	r3, r3, #3
 718 01be CB18     		add	r3, r1, r3
 719 01c0 5A60     		str	r2, [r3, #4]
 440:../Generated_Code/TU1.c ****       break;
 720              		.loc 1 440 0
 721 01c2 36E0     		b	.L41
 722              	.L33:
 441:../Generated_Code/TU1.c ****     case OUTPUT_SET:
 442:../Generated_Code/TU1.c ****       if (CompareAction != OUTPUT_CLEAR) {
 723              		.loc 1 442 0
 724 01c4 BB1C     		add	r3, r7, #2
 725 01c6 1B78     		ldrb	r3, [r3]
 726 01c8 022B     		cmp	r3, #2
 727 01ca 01D0     		beq	.L43
 443:../Generated_Code/TU1.c ****         return ERR_NOTAVAIL;
 728              		.loc 1 443 0
 729 01cc 0923     		mov	r3, #9
 730 01ce 31E0     		b	.L28
 731              	.L43:
 444:../Generated_Code/TU1.c ****       }
 445:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_SET);
 732              		.loc 1 445 0
 733 01d0 1B49     		ldr	r1, .L45+4
 734 01d2 FB1C     		add	r3, r7, #3
 735 01d4 1B78     		ldrb	r3, [r3]
 736 01d6 1B4A     		ldr	r2, .L45+8
 737 01d8 D35C     		ldrb	r3, [r2, r3]
 738 01da 181C     		mov	r0, r3
 739 01dc 184A     		ldr	r2, .L45+4
 740 01de FB1C     		add	r3, r7, #3
 741 01e0 1B78     		ldrb	r3, [r3]
 742 01e2 184C     		ldr	r4, .L45+8
 743 01e4 E35C     		ldrb	r3, [r4, r3]
 744 01e6 0133     		add	r3, r3, #1
 745 01e8 DB00     		lsl	r3, r3, #3
 746 01ea D318     		add	r3, r2, r3
 747 01ec 5B68     		ldr	r3, [r3, #4]
 748 01ee B022     		mov	r2, #176
 749 01f0 9343     		bic	r3, r2
 750 01f2 3022     		mov	r2, #48
 751 01f4 1A43     		orr	r2, r3
 752 01f6 431C     		add	r3, r0, #1
 753 01f8 DB00     		lsl	r3, r3, #3
 754 01fa CB18     		add	r3, r1, r3
 755 01fc 5A60     		str	r2, [r3, #4]
 446:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FALLING
 756              		.loc 1 446 0
 757 01fe 1049     		ldr	r1, .L45+4
 758 0200 FB1C     		add	r3, r7, #3
 759 0202 1B78     		ldrb	r3, [r3]
 760 0204 0F4A     		ldr	r2, .L45+8
 761 0206 D35C     		ldrb	r3, [r2, r3]
 762 0208 181C     		mov	r0, r3
 763 020a 0D4A     		ldr	r2, .L45+4
 764 020c FB1C     		add	r3, r7, #3
 765 020e 1B78     		ldrb	r3, [r3]
 766 0210 0C4C     		ldr	r4, .L45+8
 767 0212 E35C     		ldrb	r3, [r4, r3]
 768 0214 0133     		add	r3, r3, #1
 769 0216 DB00     		lsl	r3, r3, #3
 770 0218 D318     		add	r3, r2, r3
 771 021a 5B68     		ldr	r3, [r3, #4]
 772 021c 8C22     		mov	r2, #140
 773 021e 9343     		bic	r3, r2
 774 0220 0822     		mov	r2, #8
 775 0222 1A43     		orr	r2, r3
 776 0224 431C     		add	r3, r0, #1
 777 0226 DB00     		lsl	r3, r3, #3
 778 0228 CB18     		add	r3, r1, r3
 779 022a 5A60     		str	r2, [r3, #4]
 447:../Generated_Code/TU1.c ****       break;
 780              		.loc 1 447 0
 781 022c 01E0     		b	.L41
 782              	.L44:
 448:../Generated_Code/TU1.c ****     default:
 449:../Generated_Code/TU1.c ****       return ERR_NOTAVAIL;
 783              		.loc 1 449 0
 784 022e 0923     		mov	r3, #9
 785 0230 00E0     		b	.L28
 786              	.L41:
 450:../Generated_Code/TU1.c ****   }
 451:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 787              		.loc 1 451 0
 788 0232 0023     		mov	r3, #0
 789              	.L28:
 452:../Generated_Code/TU1.c **** }
 790              		.loc 1 452 0
 791 0234 181C     		mov	r0, r3
 792 0236 BD46     		mov	sp, r7
 793 0238 03B0     		add	sp, sp, #12
 794              		@ sp needed for prologue
 795 023a 90BD     		pop	{r4, r7, pc}
 796              	.L46:
 797              		.align	2
 798              	.L45:
 799 023c 00000000 		.word	ChannelMode
 800 0240 00800340 		.word	1073971200
 801 0244 00000000 		.word	ChannelDevice
 802              		.cfi_endproc
 803              	.LFE5:
 805              		.text
 806              	.Letext0:
 807              		.file 2 "C:/Freescale/CW MCU v10.7/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 808              		.file 3 "../Generated_Code/PE_Types.h"
 809              		.file 4 "C:/Freescale/CW MCU v10.7/MCU/ProcessorExpert/lib/Kinetis/iofiles/MKL25Z4.h"
 810              		.file 5 "../Generated_Code/TU1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU1.c
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:18     .rodata.ChannelDevice:00000000 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:21     .rodata.ChannelDevice:00000000 ChannelDevice
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:24     .rodata.ChannelMode:00000000 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:27     .rodata.ChannelMode:00000000 ChannelMode
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:30     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:33     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:36     .text.TU1_Init:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:41     .text.TU1_Init:00000000 TU1_Init
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:177    .text.TU1_Init:000000b8 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:188    .text.TU1_GetPeriodTicks:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:193    .text.TU1_GetPeriodTicks:00000000 TU1_GetPeriodTicks
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:240    .text.TU1_GetPeriodTicks:00000038 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:245    .text.TU1_GetCounterValue:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:250    .text.TU1_GetCounterValue:00000000 TU1_GetCounterValue
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:279    .text.TU1_GetCounterValue:00000018 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:284    .text.TU1_SetOffsetTicks:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:289    .text.TU1_SetOffsetTicks:00000000 TU1_SetOffsetTicks
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:353    .text.TU1_SetOffsetTicks:0000004c $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:360    .text.TU1_GetOffsetTicks:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:365    .text.TU1_GetOffsetTicks:00000000 TU1_GetOffsetTicks
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:434    .text.TU1_GetOffsetTicks:00000058 $d
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:441    .text.TU1_SelectOutputAction:00000000 $t
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:446    .text.TU1_SelectOutputAction:00000000 TU1_SelectOutputAction
C:\Users\SAE_LP1\AppData\Local\Temp\ccyJZTLf.s:799    .text.TU1_SelectOutputAction:0000023c $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.aba60cd3b17efbc2d56a1d9fc6f583a6
                           .group:00000000 wm4.ewl_c_version.h.9.0bcb57d6a3f89baae1f9b121de2772f5
                           .group:00000000 wm4.os_enum.h.9.03d7426d632bb1a35ec1708754c41daf
                           .group:00000000 wm4.ansi_prefix.ARM.h.13.2dd306b0ccbe86124098bfe3a0b58d88
                           .group:00000000 wm4.ansi_parms.h.64.05090287ebda70c0d79c02b050dca090
                           .group:00000000 wm4.limits_api.h.9.bc6daa20b3abae2bba6c512044e73b43
                           .group:00000000 wm4.ewl_lib_ext1.h.14.f9b057cc049671136093886db2a3473f
                           .group:00000000 wm4.cstdint.137.268b37259d2d366c21376cbd280e10d7
                           .group:00000000 wm4.PE_Types.h.69.0f70e9553c29a787d42fe2ac9dbd945d
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.61.443ca05468cb0c6bf080e06394e39146
                           .group:00000000 wm4.MKL25Z4.h.61.adbdc31ae5ef570825ab0667cccdf447
                           .group:00000000 wm4.PDD_Types.h.5.e0b4125fe5201c5e1f688b067f4f0d54
                           .group:00000000 wm4.TPM_PDD.h.47.938deaa7335b1be1e86f1f3ea98af3d6
                           .group:00000000 wm4.Cpu.h.64.f81ea9fa0d5dd4235933d360f41084fe
                           .group:00000000 wm4.TU1.h.131.b88ff748c6c68c5a4fb5a26e2d236fa3

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
